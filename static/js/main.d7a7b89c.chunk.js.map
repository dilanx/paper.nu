{"version":3,"sources":["CourseManager.js","Utility.js","components/Class.js","components/Quarter.js","components/Year.js","components/Content.js","components/menu/Info.js","components/menu/TaskBar.js","components/search/SearchClass.js","components/search/AddButtons.js","components/search/Search.js","components/menu/StatsBar.js","components/menu/Alert.js","components/favorites/FavoritesList.js","components/favorites/Favorites.js","App.js","index.js"],"names":["loadData","params","data","favoritesNoCredit","Set","favoritesForCredit","loadedSomething","entries","pair","key","value","startsWith","year","parseInt","substring","split","quarter","classes","classData","sp","subjId","num","courseId","courses","major_ids","course","CourseManager","getCourse","malformed","push","sort","a","b","id","localeCompare","length","classesLists","i","add","e","favorites","noCredit","forCredit","empty","countCourseUnitsInHundreds","total","forEach","parseFloat","units","getDistroFulfillment","df","y","q","c","distros","distroStr","dfl","d","thisDf","JSON","parse","stringify","console","log","getDistroPositions","distroPos","more","includes","getTotalCredits","getExtraCredits","getQuarterCredits","duplicateCourse","name","getCourseColor","subj","majors","color","load","fallbackToStorage","loadFromURL","storageData","loadFromStorage","save","search","window","location","URLSearchParams","dataStr","localStorage","getItem","saveToStorage","map","join","set","Array","from","conv","saveData","paramsStr","toString","history","replaceState","pathname","setItem","Utility","BACKGROUND_LIGHT","BACKGROUND_DARK","loadSwitchesFromStorage","switches","save_to_storage","keys","Object","val","saveSwitchToStorage","getDistroAcronym","distroString","distro","acronym","convertDistros","strings","convertYear","convertQuarter","title","prereqColor","Class","this","props","placeholder","alert","subtitle","message","confirmButton","confirmButtonColor","iconBackground","icon","className","extras","prereqs","content","delCourse","addFavorite","delFavorite","description","iconBackgroundColor","editButtons","toggle","enabled","action","disabled","close","isDragging","connectDragSource","showMoreInfo","more_info","compact","isPlaceholder","onClick","openInfo","stopPropagation","React","Component","DragSource","beginDrag","monitor","component","yi","qi","connect","dragSource","Quarter","state","hovered","prevProps","isOver","setState","index","unitString","connectDropTarget","quarter_units","DropTarget","drop","didDrop","item","moveCourse","addCourse","moved","dropTarget","isOverCurrent","shallow","canDrop","itemType","getItemType","Year","hidden","quarters","courseIndex","addSummerQuarter","Content","years","Info","focusable","class","role","xmlns","viewBox","fill","TaskBarButton","span","active","TaskBar","customSubtitle","version","href","target","rel","cancelButton","open","options","buttonTextOn","singleAction","textView","navigator","clipboard","writeText","allowAddYear","addYear","setSwitch","buttonTextOff","bonusAction","newSwitch","document","body","style","backgroundColor","querySelector","setAttribute","requireConfirmation","clearData","SearchClass","distroStrings","select","AddButton","text","AddButtonSection","withSummer","withoutSummer","size","AddButtons","sections","SEARCH_RESULT_LIMIT","shortcut","MiniContentBlock","Search","current","toLowerCase","terms","replace","firstWord","shortcuts","remainder","replacing","toUpperCase","with","searchMessage","courseIdResults","courseNameResults","term","limitExceeded","slice","filtered","concat","courseList","singleClassView","results","getResults","searchField","onChange","event","selectedClass","addButtons","favoritesButtons","exitButton","has","StatsBar","Alert","useState","isOpen","setIsOpen","confirmation","setConfirmation","cancelButtonRef","useRef","onClose","extraList","extra","optionList","option","editButtonList","editButton","dataSet","t","initialFocus","dark","Overlay","Title","as","type","onConfirm","ref","FavoritesList","credit","Favorites","VERSION","App","defaultSwitches","defaultAlert","res","alertData","repeatable","exists","unitCount","showAlert","actuallyAddCourse","splice","oldYear","oldQuarter","newYear","newQuarter","delete","DndProvider","backend","HTML5Backend","postShowAlert","ReactDOM","render","StrictMode","getElementById"],"mappings":"iq+4FAEA,SAASA,EAASC,GAEd,IAAIC,EAAO,CAAC,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,KAC3DC,EAAoB,IAAIC,IACxBC,EAAqB,IAAID,IAEzBE,GAAkB,EAEtB,IAAK,IAAD,gBAEiBL,EAAOM,WAFxB,IAEA,2BAAmC,CAAC,IAA3BC,EAA0B,QAE3BC,EAAMD,EAAK,GACXE,EAAQF,EAAK,GAEjB,GAAIC,EAAIE,WAAW,KAAM,CAErBL,GAAkB,EAElB,IAJqB,EAIjBM,EAAOC,SAASJ,EAAIK,UAAU,GAAGC,MAAM,KAAK,IAC5CC,EAAUH,SAASJ,EAAIM,MAAM,KAAK,IAClCE,EAAUP,EAAMK,MAAM,KACtBG,EAAY,GAPK,cASND,GATM,IASrB,2BAAwB,CAAC,IACjBE,EADgB,QACRJ,MAAM,KACdK,EAASD,EAAG,GACZE,EAAMF,EAAG,GAETG,EADOC,EAAQC,UAAUJ,GACP,IAAMC,EAExBI,EAASC,EAAcC,UAAUL,GACrC,GAAc,MAAVG,EAAgB,MAAO,CAAEG,WAAW,GACxCV,EAAUW,KAAKJ,IAlBE,8BAyBrB,IAJAP,EAAUY,MAAK,SAACC,EAAGC,GACf,OAAOD,EAAEE,GAAGC,cAAcF,EAAEC,OAGzB/B,EAAKiC,OAASvB,EAAO,GACxBV,EAAK2B,KAAK,CAAC,GAAI,GAAI,KAGvB,KAAO3B,EAAKU,GAAMuB,OAASnB,EAAU,GACjCd,EAAKU,GAAMiB,KAAK,IAGpB3B,EAAKU,GAAMI,GAAWE,EAI1B,GAAIT,EAAIE,WAAW,KAAM,CAErBL,GAAkB,EAGlB,IADA,IAAI8B,EAAe1B,EAAMK,MAAM,KACtBsB,EAAI,EAAGA,EAAID,EAAaD,OAAQE,IAAK,CAC1C,IAD0C,EACtCpB,EAAUmB,EAAaC,GAAGtB,MAAM,KADM,cAE3BE,GAF2B,IAE1C,2BAAwB,CAAC,IAAhBgB,EAAe,QACpB,GAAW,KAAPA,EAAJ,CACA,IAAId,EAAKc,EAAGlB,MAAM,KACdK,EAASD,EAAG,GACZE,EAAMF,EAAG,GAETG,EADOC,EAAQC,UAAUJ,GACP,IAAMC,EAClB,IAANgB,EAASlC,EAAkBmC,IAAIZ,EAAcC,UAAUL,IACtDjB,EAAmBiC,IAAIZ,EAAcC,UAAUL,MAVd,kCAjDtD,+BAkEF,MAAOiB,GACL,MAAO,CAAEX,WAAW,GAGxB,OAAKtB,EAEE,CACHJ,KAAMA,EACNsC,UAAW,CACPC,SAAUtC,EACVuC,UAAWrC,IANU,CAAEsC,OAAO,GAqD1C,SAASC,EAA2B1C,GAChC,IAAI2C,EAAQ,EAOZ,OANA3C,EAAK4C,SAAQ,SAAArB,IACToB,GAAoC,IAA3BE,WAAWtB,EAAOuB,QACf,MAAQ,IAAGH,GAAS,GAC5BA,EAAQ,KAAO,IAAGA,GAAS,GAC3BA,EAAQ,KAAO,KAAIA,GAAS,MAE7BA,EAGX,IAAInB,EAAgB,CAEhBxB,KAAMqB,EAEN0B,qBAAsB,SAAA/C,GAIlB,IAFA,IAAIgD,EAAK,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAEtBC,EAAI,EAAGA,EAAIjD,EAAKiC,OAAQgB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIlD,EAAKiD,GAAGhB,OAAQiB,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAInD,EAAKiD,GAAGC,GAAGjB,OAAQkB,IAAK,CAExC,IAAI5B,EAASvB,EAAKiD,GAAGC,GAAGC,GACxB,GAAK5B,EAAO6B,QAIZ,IAHA,IAAIC,EAAY9B,EAAO6B,QAEnBE,EAAMN,EAAGf,OACJE,EAAI,EAAGA,EAAImB,EAAKnB,IACrB,IAAK,IAAIoB,EAAI,EAAGA,EAAIF,EAAUpB,OAAQsB,IAAK,CAGvC,IAAIC,EAASC,KAAKC,MAAMD,KAAKE,UAAUX,EAAGb,KAE1CqB,EADS7C,SAAS0C,EAAUE,IAAM,GACvB5B,KAAKJ,EAAOQ,IACvBiB,EAAGrB,KAAK6B,IAS5B,IAAK,IAAIrB,EAAI,EAAGA,EAAIa,EAAGf,OAAQE,IAC3ByB,QAAQC,IAAIb,EAAGb,KAIvB2B,mBAAoB,SAAA9D,GAIhB,IAFA,IAAI+D,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAE5Bd,EAAI,EAAGA,EAAIjD,EAAKiC,OAAQgB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIlD,EAAKiD,GAAGhB,OAAQiB,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAInD,EAAKiD,GAAGC,GAAGjB,OAAQkB,IAAK,CAExC,IAAIa,EAAOhE,EAAKiD,GAAGC,GAAGC,GAAGa,KACzB,GAAKA,EAEL,IAAK,IAAI7B,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAI6B,EAAKC,SAAL,WAAkB9B,IAAM,CACxB4B,EAAU5B,GAAGR,KAAKwB,GAClB,OAQpB,OAAOY,GAIXG,gBAAiB,SAAClE,EAAMG,GAIpB,IAFA,IAAIwC,EAAQ,EAEHM,EAAI,EAAGA,EAAIjD,EAAKiC,OAAQgB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIlD,EAAKiD,GAAGhB,OAAQiB,KAChCP,GAASD,EAA2B1C,EAAKiD,GAAGC,KAChC,MAAQ,IAAGP,GAAS,GAC5BA,EAAQ,KAAO,IAAGA,GAAS,GAC3BA,EAAQ,KAAO,KAAIA,GAAS,GASxC,OALAA,GAASD,EAA2BvC,IACxB,MAAQ,IAAGwC,GAAS,GAC5BA,EAAQ,KAAO,IAAGA,GAAS,GAC3BA,EAAQ,KAAO,KAAIA,GAAS,GAEzBA,EAAQ,KAInBwB,gBAAiB,SAAAhE,GACb,OAAOuC,EAA2BvC,GAAsB,KAG5DiE,kBAAmB,SAAAtD,GACf,OAAO4B,EAA2B5B,GAAW,KAGjDuD,gBAAiB,SAAC9C,EAAQvB,GAEtB,IAAK,IAAIiD,EAAI,EAAGA,EAAIjD,EAAKiC,OAAQgB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIlD,EAAKiD,GAAGhB,OAAQiB,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAInD,EAAKiD,GAAGC,GAAGjB,OAAQkB,IACnC,GAAInD,EAAKiD,GAAGC,GAAGC,GAAGpB,KAAOR,EAAOQ,GAC5B,MAAO,CACHrB,KAAMuC,EACNnC,QAASoC,GAO7B,OAAO,MAIXzB,UAAW,SAAA6C,GAAS,IAAD,gBACIjD,EAAQA,SADZ,IACf,2BAAoC,CAAC,IAA5BE,EAA2B,QAChC,GAAIA,EAAOQ,KAAOuC,EACd,OAAO/C,GAHA,8BAMf,OAAO,MAGXgD,eAAgB,SAAAxC,GACZ,IAAIyC,EAAOzC,EAAGlB,MAAM,KAAK,GACzB,OAAOQ,EAAQoD,OAAOD,GAAME,OAGhCC,KAAM,SAAAC,GAEF,IAAI5E,EAAOwB,EAAcqD,cAEzB,GAAI7E,EAAK0B,UACL,OAAO1B,EAGX,GAAIA,EAAKyC,OAASmC,EAAmB,CACjC,IAAIE,EAActD,EAAcuD,kBAIhC,OAHID,EAAY9E,MAAQ8E,EAAYxC,WAChCd,EAAcwD,KAAKF,EAAY9E,KAAM8E,EAAYxC,WAAW,GAEzDwC,EAGX,OAAO9E,GAIX6E,YAAa,WACT,IAAII,EAASC,OAAOC,SAASF,OAE7B,OAAOnF,EADM,IAAIsF,gBAAgBH,KAIrCF,gBAAiB,WACb,IAAIM,EAAUC,aAAaC,QAAQ,QACnC,OAAe,MAAXF,EAAwB,CAAE5C,OAAO,GAE9B3C,EADM,IAAIsF,gBAAgBC,KAIrCL,KAAM,SAAChF,EAAMsC,EAAWkD,GAEpB,IAAIzF,EAtNZ,SAAkBC,EAAMsC,GAIpB,IAFA,IAAIvC,EAAS,IAAIqF,gBAERnC,EAAI,EAAGA,EAAIjD,EAAKiC,OAAQgB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIlD,EAAKiD,GAAGhB,OAAQiB,IAAK,CACrC,IAAInC,EAAUf,EAAKiD,GAAGC,GAAGuC,KAAI,SAAAlE,GACzB,IAAIN,EAAKM,EAAOQ,GAAGlB,MAAM,KACrB2D,EAAOvD,EAAG,GACVE,EAAMF,EAAG,GAEb,OADaI,EAAQoD,OAAOD,GAAMzC,GAClB,IAAMZ,KACvBuE,KAAK,KAEJ3E,EAAQkB,OAAS,GAAGlC,EAAO4F,IAAP,WAAe1C,EAAf,YAAoBC,GAAKnC,GAKzD,IAAId,EAAoB2F,MAAMC,KAAKvD,EAAUC,UACzCpC,EAAqByF,MAAMC,KAAKvD,EAAUE,WAE9C,GAAIvC,EAAkBgC,OAAS,GAAK9B,EAAmB8B,OAAS,EAAG,CAE/D,IAAI6D,EAAO,SAAAvE,GACP,IACIN,EADWM,EAAOQ,GACJlB,MAAM,KACpB2D,EAAOvD,EAAG,GACVE,EAAMF,EAAG,GAEb,OADaI,EAAQoD,OAAOD,GAAMzC,GAClB,IAAMZ,GAG1BpB,EAAO4F,IAAI,IAAK1F,EAAkBwF,IAAIK,GAAMJ,KAAK,KAAO,IAAMvF,EAAmBsF,IAAIK,GAAMJ,KAAK,MAIpG,OAAO3F,EAiLUgG,CAAS/F,EAAMsC,GACxB0D,EAAYjG,EAAOkG,WAEvBf,OAAOgB,QAAQC,aAAa,GAAI,GAAhC,UAAuCjB,OAAOC,SAASiB,SAAvD,YAAmEJ,IAE/DR,GACAF,aAAae,QAAQ,OAAQL,KAO1BxE,ICtLA8E,EAzID,CAEVC,iBAAkB,UAClBC,gBAAiB,UAEjBC,wBAAyB,WAKrB,IAJA,IAAIC,EAAW,CACXC,iBAAiB,GAEjBC,EAAOC,OAAOD,KAAKtB,cACdnD,EAAI,EAAGA,EAAIyE,EAAK3E,OAAQE,IAC7B,GAAIyE,EAAKzE,GAAG1B,WAAW,WAAY,CAC/B,IAAIqG,EAAMxB,aAAaC,QAAQqB,EAAKzE,IAExB,SAAR2E,EAAgBA,GAAM,EACT,UAARA,IAAiBA,GAAM,GAChCJ,EAHeE,EAAKzE,GAAGvB,UAAU,IAGZkG,EAG7B,OAAOJ,GAGXK,oBAAqB,SAACxG,EAAKuG,GACvBxB,aAAae,QAAQ,UAAY9F,EAAKuG,IAG1CE,iBAAkB,SAAAC,GACd,IAAIC,EAASD,EAAapG,MAAM,KAC5BsG,EAAU,GAEd,OADAD,EAAOtE,SAAQ,SAAAW,GAAC,OAAI4D,GAAW5D,EAAE,MAC1B4D,GAGXC,eAAgB,SAAAhE,GAEZ,IAAIiE,EAAU,GAEd,IAAKjE,EAAS,OAAOiE,EAErB,IAAK,IAAIlF,EAAI,EAAGA,EAAIiB,EAAQnB,OAAQE,IAAK,CAIrC,OAFQxB,SAASyC,EAAQjB,KAGrB,KAAK,EACDkF,EAAQ1F,KAAK,oBACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,kBACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,kCACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,sBACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,qBACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,4BACb,MACJ,KAAK,EACD0F,EAAQ1F,KAAK,6BACb,MACJ,QACI0F,EAAQ1F,KAAK,YAMzB,OAAO0F,GAIXC,YAAa,SAAAnG,GACT,OAAOA,GACH,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,QACX,QACI,MAAO,YAInBoG,eAAgB,SAAApG,GACZ,OAAQA,GACJ,KAAK,EACD,MAAO,CAACqG,MAAO,OAAQ9C,MAAO,UAClC,KAAK,EACD,MAAO,CAAC8C,MAAO,SAAU9C,MAAO,OACpC,KAAK,EACD,MAAO,CAAC8C,MAAO,SAAU9C,MAAO,QACpC,KAAK,EACD,MAAO,CAAC8C,MAAO,SAAU9C,MAAO,UACpC,QACI,MAAO,YAInB+C,YAAa,SAAAtG,GACT,OAAQA,GACJ,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,QACI,MAAO,U,0BCtGjBuG,E,8JAEF,WACI,IAAInG,EAASoG,KAAKC,MAAMrG,OACpBmD,EAAQlD,EAAc+C,eAAehD,EAAOQ,IAEhD,GAAIR,EAAOsG,YACPF,KAAKC,MAAME,MAAM,CACbN,MAAO,cACPO,SAAUxG,EAAO+C,KACjB0D,QAAQ,mLACRC,cAAe,QACfC,mBAAoBxD,EACpByD,eAAgBzD,EAChB0D,KAAO,cAAC,IAAD,CAAcC,UAAS,uBAAkB3D,EAAlB,QAA+B,cAAY,eARjF,CAaA,IAAI4D,EAAS,GAWb,GATI/G,EAAOgH,SACPD,EAAO3G,KACH,CACI6F,MAAO,gBACPgB,QAASjH,EAAOgH,UAKxBhH,EAAO6B,QAAS,CAChB,IAAIA,EAAUkD,EAAQc,eAAe7F,EAAO6B,SAC5CkF,EAAO3G,KACH,CACI6F,MAAO,qBACPgB,QAASpF,EAAQsC,KAAK,QAKlC4C,EAAO3G,KACH,CACI6F,MAAO,QACPgB,QAASjH,EAAOuB,QAIxB,IAAI2F,EAAYd,KAAKC,MAAMa,UACvBnG,EAAYqF,KAAKC,MAAMtF,UACvBoG,EAAcf,KAAKC,MAAMc,YACzBC,EAAchB,KAAKC,MAAMe,YAE7BhB,KAAKC,MAAME,MAAM,CACbN,MAAOjG,EAAOQ,GACdgG,SAAUxG,EAAO+C,KACjB0D,QAASzG,EAAOqH,YAChBX,cAAe,QACfC,mBAAoBxD,EACpBmE,oBAAqBnE,EACrB0D,KAAO,cAAC,IAAD,CAAcC,UAAS,uBAAkB3D,EAAlB,QAA+B,cAAY,SACzE4D,OAAQA,EACRQ,YAAa,CACT,CACIC,OAAQ,CACJ/I,KAAMsC,EAAUC,SAChBhC,IAAKgB,EACLyH,QAAS,CACLxB,MAAO,sBACPY,KAAO,cAAC,IAAD,CAAmBC,UAAU,YACpCY,OAAQ,WACJN,EAAYpH,GAAQ,KAG5B2H,SAAU,CACN1B,MAAO,iBACPY,KAAO,cAAC,IAAD,CAAcC,UAAU,YAC/BY,OAAQ,WACJP,EAAYnH,GAAQ,MAIhCmD,MAAO,UAEX,CACI8C,MAAO,gBACPY,KAAM,cAAC,IAAD,CAAWC,UAAU,YAC3B3D,MAAO,MACPuE,OAAQ,WACJR,KAEJU,OAAO,S,oBAMvB,WAAU,IAAD,OAED5H,EAASoG,KAAKC,MAAMrG,OACpBmD,EAAQlD,EAAc+C,eAAehD,EAAOQ,IAEhD,EAA0C4F,KAAKC,MAAvCwB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,kBAEhBC,EAAe3B,KAAKC,MAAMlB,SAAS6C,YAAc5B,KAAKC,MAAMlB,SAAS8C,QAErEC,EAAgBlI,EAAOsG,YACvB/E,EAAQD,WAAWtB,EAAOuB,OAE9B,OAAOuG,EACH,sBAAKhB,UAAS,0CAAqC3D,EAArC,8DACIA,EADJ,qMAE6E0E,EAAa,cAAgB,kBAChHM,QAAS,kBAAM,EAAKC,YAH5B,UAII,mBAAGtB,UAAS,kBAAaoB,EAAgB,cAAgB,YAA7C,mFAAZ,SACKA,EAAgBlI,EAAO+C,KAAO/C,EAAOQ,KAE1C,mBAAGsG,UAAS,kBAAaoB,EAAgB,aAAe,cAA5C,iHAA0KjC,MAAOjG,EAAO+C,KAApM,SACKmF,EAAgB,cAAgBlI,EAAO+C,OAE3CgF,GACG,gCACK/H,EAAOgH,SACJ,sBAAKF,UAAU,wCAAf,UACI,mBAAGA,UAAU,oBAAb,2BAGA,mBAAGA,UAAU,+CAAb,SACK9G,EAAOgH,aAInBhH,EAAO6B,SACJ,sBAAKiF,UAAU,wCAAf,UACI,mBAAGA,UAAU,oBAAb,gCAGA,mBAAGA,UAAU,+CAAb,SACK/B,EAAQc,eAAe7F,EAAO6B,SAASsC,KAAK,WAIzD,qBAAK2C,UAAU,OAAf,SACI,oBAAGA,UAAU,iEAAb,UACI,sBAAMA,UAAU,cAAhB,SAA+BvF,IADnC,IAC4D,IAAVA,EAAc,OAAS,gBAKrF,wBAAQuF,UAAU,oQAEiDqB,QAAS,SAAArH,GAChEA,EAAEuH,kBACF,EAAKhC,MAAMa,aAJvB,SAMI,cAAC,IAAD,CAAWJ,UAAU,sB,GA1JrBwB,IAAMC,WAiKXC,cAAW,QAvLN,CAEhBC,UAFgB,SAENpC,EAAOqC,EAASC,GAQtB,MAPa,CACT3I,OAAQqG,EAAMrG,OACdsE,KAAM,CACFnF,KAAMkH,EAAMuC,GACZrJ,QAAS8G,EAAMwC,QAQ/B,SAAiBC,EAASJ,GACtB,MAAO,CACHZ,kBAAmBgB,EAAQC,aAC3BlB,WAAYa,EAAQb,gBAqKbW,CAA0CrC,G,YC9JnD6C,E,kDAEF,WAAY3C,GAAQ,IAAD,8BACf,cAAMA,IAED4C,MAAQ,CACTC,SAAS,GAJE,E,sDAQnB,SAAmBC,IACVA,EAAUC,QAAUhD,KAAKC,MAAM+C,QAChChD,KAAKiD,SAAS,CAAEH,SAAS,IAGzBC,EAAUC,SAAWhD,KAAKC,MAAM+C,QAChChD,KAAKiD,SAAS,CAAEH,SAAS,M,oBAIjC,WAAU,IAAD,OAEDjC,EAAUb,KAAKC,MAAMY,QACrBzH,EAAU,GACVyH,IAEIzH,EADAyH,EAAQvG,OAAS,EACPuG,EAAQ/C,KAAI,SAACzE,EAAW6J,GAC9B,OAAO,cAAC,EAAD,CAAOtJ,OAAQP,EAAuBmJ,GAAI,EAAKvC,MAAMuC,GAAIC,GAAI,EAAKxC,MAAMwC,GAC/EtC,MAAO,EAAKF,MAAME,MAClBpB,SAAU,EAAKkB,MAAMlB,SACrBpE,UAAW,EAAKsF,MAAMtF,UACtBoG,YAAa,EAAKd,MAAMc,YACxBC,YAAa,EAAKf,MAAMe,YACxBF,UAAW,WACP,EAAKb,MAAMa,UAAUoC,KAPaA,MAYtC,sBAAKxC,UAAU,6KAAf,UAEI,mBAAGA,UAAU,+CAAb,iCAGA,mBAAGA,UAAU,yCAAb,qCAShB,IAAIvF,EAAQtB,EAAc4C,kBAAkBoE,GAExCsC,EAAa,QAOjB,OANc,IAAVhI,IACAgI,EAAa,SAKVC,EAFuBpD,KAAKC,MAA3BmD,mBAGJ,sBAAK1C,UAAS,6EACRV,KAAK6C,MAAMC,QAAX,0FAA0G9C,KAAKC,MAAMlD,MAArH,uCAAyJiD,KAAKC,MAAMlD,MAApK,QADQ,+EAAd,UAGI,mBAAG2D,UAAU,yFAAb,SACKV,KAAKC,MAAMJ,QAEfzG,EACA4G,KAAKC,MAAMlB,SAASsE,eACjB,oBAAG3C,UAAU,8EAAb,UACI,sBAAMA,UAAU,cAAhB,SAA+BvF,IADnC,IACkDgI,a,GAxEhDjB,IAAMC,WAiFbmB,cAAW,QA5GJ,CAElBC,KAFkB,SAEbtD,EAAOqC,EAASC,GACjB,IAAID,EAAQkB,UAAZ,CAGA,IAAMC,EAAOnB,EAAQ1E,UAMrB,OALI6F,EAAKvF,KACL+B,EAAMyD,WAAWD,EAAK7J,OAAQ6J,EAAKvF,KAAKnF,KAAM0K,EAAKvF,KAAK/E,QAAS8G,EAAMuC,GAAIvC,EAAMwC,IAEjFxC,EAAM0D,UAAUF,EAAK7J,QAElB,CAAEgK,OAAO,OAKxB,SAAiBlB,EAASJ,GACtB,MAAO,CACHc,kBAAmBV,EAAQmB,aAC3Bb,OAAQV,EAAQU,SAChBc,cAAexB,EAAQU,OAAO,CAAEe,SAAS,IACzCC,QAAS1B,EAAQ0B,UACjBC,SAAU3B,EAAQ4B,iBAqFXZ,CAA4CV,GCnC5CuB,E,kDAvEX,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IAED4C,MAAQ,CACTuB,QAAQ,GAJG,E,0CAQnB,WAAU,IAAD,OAEDvD,EAAUb,KAAKC,MAAMY,QAErBwD,EAAW,GAsBf,OArBIxD,IACAwD,EAAWxD,EAAQ/C,KAAI,SAAC3E,EAAS+J,GAC7B,MAAqBvE,EAAQiB,eAAesD,GAAvCrD,EAAL,EAAKA,MAAO9C,EAAZ,EAAYA,MACZ,OAAO,cAAC,EAAD,CAAS8C,MAAOA,EAAO9C,MAAOA,EAAO8D,QAAS1H,EAAqBqJ,GAAI,EAAKvC,MAAMuC,GAAIC,GAAIS,EAC7F/C,MAAO,EAAKF,MAAME,MAClBpB,SAAU,EAAKkB,MAAMlB,SACrB4E,UAAW,SAAA/J,GACP,EAAKqG,MAAM0D,UAAU/J,EAAQsJ,IAEjCpC,UAAW,SAAAwD,GACP,EAAKrE,MAAMa,UAAUwD,EAAapB,IAEtCQ,WAAY,EAAKzD,MAAMyD,WACvB/I,UAAW,EAAKsF,MAAMtF,UACtBoG,YAAa,EAAKd,MAAMc,YACxBC,YAAa,EAAKf,MAAMe,aAZuCkC,OAoBvE,sBAAKxC,UAAU,+KAAf,UAEI,mBAAGA,UAAS,6GAAwGV,KAAK6C,MAAMuB,OAAS,GAAK,QAA7I,SACKpE,KAAKC,MAAMJ,SAEdG,KAAK6C,MAAMuB,QACT,qBAAK1D,UAAS,2BAA0C,IAApB2D,EAAS/J,OAAe,iBAAmB,iBAAjE,WAAd,SACK+J,IAGT,sBAAK3D,UAAU,0DAAf,UACK2D,EAAS/J,OAAS,GACf,wBAAQoG,UAAU,mFACVb,MAAM,qBACNkC,QAAS,WACL,EAAK9B,MAAMsE,iBAAiB,EAAKtE,MAAMuC,KAHnD,SAKI,cAAC,IAAD,CAAU9B,UAAU,cAG5B,wBAAQA,UAAU,6EACVb,MAAOG,KAAK6C,MAAMuB,OAAS,2BAA8B,2BACzDrC,QAAS,WACL,EAAKkB,SAAS,CAACmB,QAAS,EAAKvB,MAAMuB,UAH/C,SAKKpE,KAAK6C,MAAMuB,OAAS,cAAC,IAAD,CAAiB1D,UAAU,YAAc,cAAC,IAAD,CAAeA,UAAU,wB,GA/D5FwB,IAAMC,WCDnBqC,E,4JAEF,WAAU,IAAD,OACD3D,EAAUb,KAAKC,MAAMY,QACrB4D,EAAQ,GAoBZ,OAnBI5D,IACA4D,EAAQ5D,EAAQ/C,KAAI,SAAC/E,EAAMmK,GACvB,OAAO,cAAC,EAAD,CAAMrD,MAAOlB,EAAQgB,YAAYuD,GAAS,QAASrC,QAAS9H,EAAMyJ,GAAIU,EACzE/C,MAAO,EAAKF,MAAME,MAClBpB,SAAU,EAAKkB,MAAMlB,SACrB4E,UAAW,SAAC/J,EAAQT,GAChB,EAAK8G,MAAM0D,UAAU/J,EAAQsJ,EAAO/J,IAExC2H,UAAW,SAACwD,EAAanL,GACrB,EAAK8G,MAAMa,UAAUwD,EAAapB,EAAO/J,IAE7CuK,WAAY,EAAKzD,MAAMyD,WACvBa,iBAAkB,EAAKtE,MAAMsE,iBAC7B5J,UAAW,EAAKsF,MAAMtF,UACtBoG,YAAa,EAAKd,MAAMc,YACxBC,YAAa,EAAKf,MAAMe,aAb6DkC,OAkB7F,qBAAKxC,UAAU,4BAAf,SACK+D,Q,GA1BKvC,IAAMC,WAgCbqC,IClCTE,E,4JAEF,WACI,OACI,sBAAKhE,UAAU,uLAAf,UACI,qBAAK,cAAY,OAAOiE,UAAU,QAAQ,cAAY,MAAM,YAAU,WAAWC,MAAM,uFAAuFC,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,cAApO,SAAkP,sBAAMC,KAAK,eAAepJ,EAAE,+TAC9Q,mBAAG8E,UAAU,4DAAb,sC,GANGwB,IAAMC,WAeVuC,ICbf,SAASO,EAAchF,GACnB,OACI,wBAAQS,UAAS,qGACMT,EAAMlD,MADZ,yBACkCkD,EAAMlD,MADxC,0BAC+DkD,EAAMlD,MADrE,6HAGWkD,EAAMlD,MAHjB,8BAG4CkD,EAAMlD,MAHlD,gCAG+EkD,EAAMlD,MAHrF,6DAIqBkD,EAAMiF,KAAN,mBAAyBjF,EAAMiF,MAAS,GAJ7D,6BAKPjF,EAAMkF,OAAN,iBAAyBlF,EAAMlD,MAA/B,mBAA+CkD,EAAMlD,MAArD,oBAAsEkD,EAAMlD,MAA5E,4BAAqGkD,EAAMlD,MAA3G,wBAAgIkD,EAAMlD,MAAtI,0BAA6JkD,EAAMlD,MAAnK,YACFgF,QAAS,WACL9B,EAAMqB,UAPlB,SASKrB,EAAMtD,O,IAKbyI,E,4JAEF,WAAU,IAAD,OACL,OAEI,sBAAK1E,UAAU,sCAAf,UAEI,cAACuE,EAAD,CAAetI,KAAK,QAAQI,MAAM,SAASuE,OAAQ,WAE/C,EAAKrB,MAAME,MAAM,CACbN,MAAO,oBACPwF,eACI,oBAAG3E,UAAU,sDAAb,qBACa,EAAKT,MAAMqF,QADxB,OACoC,mBAAG5E,UAAU,gGACT6E,KAAK,sBACLC,OAAO,SACPC,IAAI,aAHR,wBAMxCpF,QAAS,4KACTC,cAAe,iBACfC,mBAAoB,SACpBmF,aAAc,QACdxE,oBAAqB,SACrBT,KAAO,cAAC,IAAD,CAAuBC,UAAU,0BAA0B,cAAY,SAC9EY,OAAQ,WACJ/D,OAAOoI,KAAK,8CAA+C,WAE/DC,QAAS,CACL,CACIjJ,KAAM,mBACNkD,MAAM,cACNoB,YAAY,8DACZ4E,aAAa,sBACbC,aAAc,WACVvI,OAAOoI,KAAK,qEAAsE,YAG1F,CACIhJ,KAAM,oBACNkD,MAAO,cACPoB,YAAY,4KACZ4E,aAAa,oBACbC,aAAc,WACVvI,OAAOoI,KAAK,wDAAyD,YAG7E,CACIhJ,KAAM,iBACNkD,MAAO,uBACPoB,YAAY,0IACZ4E,aAAc,iBACdC,aAAc,WACVvI,OAAOoI,KAAK,oEAAqE,kBASrG,cAACV,EAAD,CAAetI,KAAK,eAAeI,MAAM,UAAUuE,OAAQ,WACvD,EAAKrB,MAAME,MAAM,CACbN,MAAO,kBACPQ,QAAS,0KACTC,cAAe,oBACfC,mBAAoB,UACpBmF,aAAc,QACdxE,oBAAqB,UACrBT,KAAO,cAAC,IAAD,CAAUC,UAAU,2BAA2B,cAAY,SAClEqF,SAAUxI,OAAOC,SAAS+H,KAC1BjE,OAAQ,WACJ0E,UAAUC,UAAUC,UAAU3I,OAAOC,SAAS+H,YAK1D,cAACN,EAAD,CAAetI,KAAK,WAAWI,MAAM,OAAOuE,OAAQ,WAC5C,EAAKrB,MAAMkG,aACX,EAAKlG,MAAME,MAAM,CACbN,MAAO,cACPQ,QAAS,6HACTC,cAAe,WACfC,mBAAoB,OACpBmF,aAAc,QACdxE,oBAAqB,OACrBT,KAAO,cAAC,IAAD,CAAUC,UAAU,wBAAwB,cAAY,SAC/DY,OAAQ,WACJ,EAAKrB,MAAMmG,aAInB,EAAKnG,MAAME,MAAM,CACbN,MAAM,4BACNQ,QAAQ,oCACRC,cAAe,QACfC,mBAAoB,OACpBW,oBAAqB,OACrBT,KAAO,cAAC,IAAD,CAAiBC,UAAU,wBAAwB,cAAY,cAKlF,cAACuE,EAAD,CAAetI,KAAK,WAAWI,MAAM,SAASuE,OAAQ,WAClD,EAAKrB,MAAME,MAAM,CACbN,MAAO,WACPQ,QAAQ,4GACRC,cAAe,QACfC,mBAAoB,SACpBW,oBAAqB,SACrBT,KAAO,cAAC,IAAD,CAASC,UAAU,0BAA0B,cAAY,SAChE3B,SAAU,EAAKkB,MAAMlB,SACrBsH,UAAW,EAAKpG,MAAMoG,UACtBT,QAAS,CACL,CACIjJ,KAAM,OACNkD,MAAO,YACPoB,YAAY,6BACZ4E,aAAc,UACdS,cAAe,WACfzI,eAAe,EACf0I,YAAa,SAAAC,GACT,IAAIzJ,EAAQyJ,EAAY7H,EAAQE,gBAAkBF,EAAQC,iBAC1D6H,SAASC,KAAKC,MAAMC,gBAAkB7J,EACtC0J,SAASI,cAAc,4BAA4BC,aAAa,UAAW/J,KAGnF,CACIJ,KAAM,UACNkD,MAAO,eACPoB,YAAY,oGACZ4E,aAAc,UACdS,cAAe,WACfzI,eAAe,GAEnB,CACIlB,KAAM,gBACNkD,MAAO,yBACPoB,YAAa,qCACb4E,aAAc,UACdS,cAAe,WACfzI,eAAe,GAEnB,CACIlB,KAAM,YACNkD,MAAO,4BACPoB,YAAY,+JACZ4E,aAAc,UACdS,cAAe,WACfzI,eAAe,GAEnB,CACIlB,KAAM,kBACNkD,MAAO,4BACPoB,YAAY,mGACZ4E,aAAc,UACdS,cAAe,WACfzI,eAAe,GAEnB,CACIlB,KAAM,aACNkD,MAAO,aACPoB,YAAY,oLACZ4E,aAAc,QACdkB,qBAAqB,EACrBjB,aAAc,WACV,EAAK7F,MAAM+G,oBAO/B,cAAC/B,EAAD,CAAetI,KAAK,UAAUI,MAAM,SAASoI,OAAQnF,KAAKC,MAAMlB,SAASpE,UAAWuK,KAAK,IAAI5D,OAAQ,WACjG,EAAKrB,MAAMoG,UAAU,aAAc,EAAKpG,MAAMlB,SAASpE,qB,GA/KrDuH,IAAMC,WAwLbiD,ICxLf,IAEM6B,E,kDAEF,WAAYhH,GAAQ,IAAD,sBACf,cAAMA,GAKN,IAHA,IAAIxE,EAAU,GACVyL,EAAgBvI,EAAQc,eAAe,EAAKQ,MAAMrG,OAAO6B,SAEpDjB,EAAI,EAAGA,EAAI0M,EAAc5M,OAAQE,IACtCiB,EAAQzB,KACJ,mBAAG0G,UAAU,8DAAb,SACKwG,EAAc1M,IADnB,iBAA0FA,KARnF,OAcf,EAAKqI,MAAQ,CACTpH,QAASA,GAfE,E,0CAoBnB,WAAU,IAAD,OACL,EAA0CuE,KAAKC,MAAvCwB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,kBAChBI,EAAgB9B,KAAKC,MAAMrG,OAAOsG,YAClC/E,EAAQD,WAAW8E,KAAKC,MAAMrG,OAAOuB,OACzC,OAAOuG,EACH,sBAAKhB,UAAS,0CAAqCV,KAAKC,MAAMlD,MAAhD,yEACeiD,KAAKC,MAAMlD,MAD1B,qJAE0F0E,EAAa,eAAiB,kBACtIM,QAAS,WACD,EAAK9B,MAAMkH,QAAQ,EAAKlH,MAAMkH,OAAO,EAAKlH,MAAMrG,SAJxD,UAMI,mBAAG8G,UAAU,iDAAb,SACKoB,EAAgB9B,KAAKC,MAAMrG,OAAO+C,KAAOqD,KAAKC,MAAMrG,OAAOQ,KAEhE,mBAAGsG,UAAU,uCAAb,SACKoB,EAAgB,cAAgB9B,KAAKC,MAAMrG,OAAO+C,OAEvD,mBAAG+D,UAAU,gDAAb,SACKoB,EA1CI,wIA0CkC9B,KAAKC,MAAMrG,OAAOqH,cAE5DjB,KAAKC,MAAMrG,OAAOgH,SACf,sBAAKF,UAAU,OAAf,UACI,mBAAGA,UAAU,qDAAb,2BAGA,mBAAGA,UAAU,8DAAb,SACKV,KAAKC,MAAMrG,OAAOgH,aAI9BZ,KAAK6C,MAAMpH,QAAQnB,OAAS,GACzB,sBAAKoG,UAAU,OAAf,UACI,mBAAGA,UAAU,qDAAb,gCAGCV,KAAK6C,MAAMpH,WAGpB,qBAAKiF,UAAU,OAAf,SACI,oBAAGA,UAAU,iEAAb,UACI,sBAAMA,UAAU,cAAhB,SAA+BvF,IADnC,IAC4D,IAAVA,EAAc,OAAS,qB,GA9DnE+G,IAAMC,WAuEjBC,cAAW,QAzFN,CAEhBC,UAFgB,SAENpC,EAAOqC,EAASC,GAEtB,MADa,CAAE3I,OAAQqG,EAAMrG,WAMrC,SAAiB8I,EAASJ,GACtB,MAAO,CACHZ,kBAAmBgB,EAAQC,aAC3BlB,WAAYa,EAAQb,gBA6EbW,CAA0C6E,GC3FzD,SAASG,EAAUnH,GACf,OACI,wBAAQS,UAAS,yBAAoBT,EAAMlD,MAA1B,mJACkFgF,QAAS,WACxG9B,EAAMqB,UAFV,SAIKrB,EAAMoH,OAKnB,SAASC,EAAiBrH,GAEtB,IAAIsH,EACA,sBAAK7G,UAAU,yBAAf,UACI,cAAC0G,EAAD,CAAWC,KAAK,KAAKtK,MAAM,SAASuE,OAAQ,WAAOrB,EAAMqB,OAAO,MAChE,cAAC8F,EAAD,CAAWC,KAAK,KAAKtK,MAAM,MAAMuE,OAAQ,WAAOrB,EAAMqB,OAAO,MAC7D,cAAC8F,EAAD,CAAWC,KAAK,KAAKtK,MAAM,OAAOuE,OAAQ,WAAOrB,EAAMqB,OAAO,MAC9D,cAAC8F,EAAD,CAAWC,KAAK,KAAKtK,MAAM,SAASuE,OAAQ,WAAOrB,EAAMqB,OAAO,SAIpEkG,EACA,sBAAK9G,UAAU,yBAAf,UACI,cAAC0G,EAAD,CAAWC,KAAK,OAAOtK,MAAM,SAASuE,OAAQ,WAAOrB,EAAMqB,OAAO,MAClE,cAAC8F,EAAD,CAAWC,KAAK,SAAStK,MAAM,MAAMuE,OAAQ,WAAOrB,EAAMqB,OAAO,MACjE,cAAC8F,EAAD,CAAWC,KAAK,SAAStK,MAAM,OAAOuE,OAAQ,WAAOrB,EAAMqB,OAAO,SAI1E,OACI,sBAAKZ,UAAU,OAAf,UACI,mBAAGA,UAAU,kDAAb,SACKT,EAAMJ,QAEK,IAAfI,EAAMwH,KAAaF,EAAaC,KAO9B,SAASE,EAAWzH,GAO/B,IALA,IAAI5H,EAAO4H,EAAM5H,KAEboM,EAAQpM,EAAKiC,OAEbqN,EAAW,GANuB,WAO7BrM,GACLqM,EAAS3N,KAAK,cAACsN,EAAD,CAAkBzH,MAAK,UAAKlB,EAAQgB,YAAYrE,GAAzB,SAAoCmM,KAAMpP,EAAKiD,GAAGhB,OAAQgH,OAAQ,SAAAnI,GAAY8G,EAAMqB,OAAOhG,EAAGnC,KAAiBmC,KAD/IA,EAAI,EAAGA,EAAImJ,EAAOnJ,IAAM,EAAxBA,GAKT,OACI,qBAAKoF,UAAU,GAAf,SACKiH,ICpDb,IAAMC,EAAsB,IACxBC,EAAW,KAEf,SAASC,EAAiB7H,GACtB,OACI,sBAAKS,UAAU,kBAAf,UACI,qBAAKA,UAAU,iFAAf,SACKT,EAAMQ,OAEX,mBAAGC,UAAU,uDAAb,SACKT,EAAMJ,QAEX,mBAAGa,UAAU,sDAAb,SACKT,EAAMoH,U,IA0PRU,E,kDAlPX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IAED4C,MAAQ,CACTvF,OAAQ,GACR0K,QAAS,KACTH,SAAU,MANC,E,iDAWnB,SAAchI,EAAOO,GACjB,OACI,sBAAKM,UAAU,oDAAf,UACI,mBAAGA,UAAU,sBAAb,SACKb,IAEL,mBAAGa,UAAU,qBAAb,SACKN,S,wBAMjB,WAAc,IAAD,OAEL9C,EAAS0C,KAAK6C,MAAMvF,OAAO2K,cAG/B,GAFAJ,EAAW,KAEW,IAAlBvK,EAAOhD,OACP,OACI,gCACI,cAACwN,EAAD,CACIrH,KAAM,cAAC,IAAD,CAAYC,UAAU,YAC5Bb,MAAM,SACNwH,KAAK,sEAET,cAACS,EAAD,CACIrH,KAAM,cAAC,IAAD,CAAcC,UAAU,YAC9Bb,MAAM,QACNwH,KAAK,+FAET,cAACS,EAAD,CACIrH,KAAM,cAAC,IAAD,CAAgBC,UAAU,YAChCb,MAAM,OACNwH,KAAK,2JAET,cAACS,EAAD,CACIrH,KAAM,cAAC,IAAD,CAAUC,UAAU,YAC1Bb,MAAM,iBACNwH,KAAK,2FAQrB,IAAIa,EAAQ,CAFZ5K,EAASA,EAAO6K,QAAQ,OAAQ,MAI5BC,EAAY9K,EAAOpE,MAAM,KAAK,GAClC,GAAIW,EAAcxB,KAAKgQ,UAAUD,GAAY,CACzC,IAAIC,EAAYxO,EAAcxB,KAAKgQ,UAAUD,GACzCE,EAAYhL,EAAOrE,UAAUmP,EAAU9N,OAAS,GACpD4N,EAAQG,EAAUvK,KAAI,SAAA+J,GAClB,OAAOA,EAASI,cAAcE,QAAQ,MAAO,KAAO,IAAMG,KAG9DT,EAAW,CACPU,UAAWH,EAAUI,cACrBC,KAAMJ,EAAUtK,KAAK,OA9CpB,oBAmDQmK,GAnDR,IAmDT,2BAAwB,CACpB,GADoB,QACX5N,OAAS,EACd,OAAO0F,KAAK0I,cAAc,iBAAnB,uCArDN,8BAyDT,IAAIC,EAAkB,GAClBC,EAAoB,GAGxB/O,EAAcxB,KAAKqB,QAAQuB,SAAQ,SAAArB,GAAW,IAAD,gBACxBsO,GADwB,IACzC,2BAAwB,CAAC,IAAhBW,EAAe,QAChBjP,EAAOQ,GAAG6N,cAAcE,QAAQ,OAAQ,KAAK7L,SAASuM,GACtDF,EAAgB3O,KAAKJ,GAEhBA,EAAO+C,KAAKsL,cAAcE,QAAQ,OAAQ,KAAK7L,SAASuM,IAC7DD,EAAkB5O,KAAKJ,IANU,kCAW7C,IAAIoB,EAAQ2N,EAAgBrO,OAASsO,EAAkBtO,OAEvD,GAAc,IAAVU,EACA,OAAOgF,KAAK0I,cAAc,kBAAnB,6BAGX,IAAII,GAAgB,EAEhB9N,EAAQ4M,IACRkB,GAAgB,EACZH,EAAgBrO,OAASsN,GACzBe,EAAkBA,EAAgBI,MAAM,EAAGnB,GAC3CgB,EAAoB,IAGpBA,EAAoBA,EAAkBG,MAAM,EAAGnB,EAAsBe,EAAgBrO,SAI7FqO,EAAgB1O,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,GAAGC,cAAcF,EAAEC,OACpDwO,EAAkB3O,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEyC,KAAKtC,cAAcF,EAAEwC,SAExD,IA9FS,EA8FLqM,EAAWL,EAAgBM,OAAOL,GAElCM,EAAa,GAhGR,cAiGUF,GAjGV,IAiGT,2BAA6B,CAAC,IAArBpP,EAAoB,QACzBsP,EAAWlP,KACP,cAAC,EAAD,CAAa+C,MAAOlD,EAAc+C,eAAehD,EAAOQ,IAAKR,OAAQA,EAAwBuN,OAAQ,SAAA9N,GACjG,EAAK4J,SAAS,CAAC+E,QAAS3O,MADsDO,EAAOQ,MAnGxF,8BAmHT,OAVI0O,GACAI,EAAWlP,KACP,cAAC8N,EAAD,CACIrH,KAAM,cAAC,IAAD,CAAoBC,UAAU,YACpCb,MAAK,cAAS7E,EAAQ4M,EAAjB,UACLP,KAAK,yFACD,aAIT6B,I,oBAIX,WAAU,IAAD,OAEDC,GAAkB,EAElBC,EAAUpJ,KAAKqJ,aAEfC,EACA,sBAAK5I,UAAU,kEAAf,UACI,uBAAOA,UAAU,gTAEuC7H,MAAOmH,KAAK6C,MAAMvF,OAAQ4C,YAAY,wBAAwBqJ,SAAU,SAAAC,GAC5H,EAAKvG,SAAS,CAAC3F,OAAQkM,EAAMhE,OAAO3M,WAEvCgP,GACG,oBAAGnH,UAAU,+DAAb,uBACc,sBAAMA,UAAU,yCAAhB,SAA0DmH,EAASU,YADjF,SACwG,sBAAM7H,UAAU,yCAAhB,SAA0DmH,EAASY,aAMnLgB,EAAgB,KAChBC,EAAa,KACbC,EAAmB,KACnBC,EAAa,KAEjB,GAAI5J,KAAK6C,MAAMmF,QAAS,CACpBmB,GAAkB,EAElBM,EACI,cAAC,EAAD,CAAa1M,MAAOlD,EAAc+C,eAAeoD,KAAK6C,MAAMmF,QAAQ5N,IAAKR,OAAQoG,KAAK6C,MAAMmF,UAGhG0B,EACQ,cAAChC,EAAD,CAAYpG,OAAQ,SAACvI,EAAMI,GACvB,EAAK8G,MAAM0D,UAAU,EAAKd,MAAMmF,QAASjP,EAAMI,GAC/C,EAAK8J,SAAS,CAAC+E,QAAS,QACzB3P,KAAM2H,KAAKC,MAAM5H,OAG5B,IAAIsC,EAAYqF,KAAKC,MAAMtF,UAE3BgP,EAEI,sBAAKjJ,UAAU,OAAf,UACI,mBAAGA,UAAU,kDAAb,qBAGA,wBAAQA,UAAU,oJACwCqB,QAAS,WACnDpH,EAAUC,SAASiP,IAAI,EAAKhH,MAAMmF,SAClC,EAAK/H,MAAMe,YAAY,EAAK6B,MAAMmF,SAAS,GAE3C,EAAK/H,MAAMc,YAAY,EAAK8B,MAAMmF,SAAS,IAL3D,SAQKrN,EAAUC,SAASiP,IAAI7J,KAAK6C,MAAMmF,SAAW,wBAA0B,qBAE5E,wBAAQtH,UAAU,uKACwCqB,QAAS,WACnDpH,EAAUE,UAAUgP,IAAI,EAAKhH,MAAMmF,SACnC,EAAK/H,MAAMe,YAAY,EAAK6B,MAAMmF,SAAS,GAE3C,EAAK/H,MAAMc,YAAY,EAAK8B,MAAMmF,SAAS,IAL3D,SAQKrN,EAAUE,UAAUgP,IAAI7J,KAAK6C,MAAMmF,SAAW,oBAAsB,sBAMjF4B,EACQ,wBAAQlJ,UAAU,gJAC2EqB,QAAS,WAC9F,EAAKkB,SAAS,CAAC+E,QAAS,QAFhC,kBAUZ,OACI,sBAAKtH,UAAU,qHAAf,WAEMyI,GAAmBG,GACnBH,GAAmBC,EAEpBD,GAAmBM,EACnBN,GAAmBO,EACnBP,GAAmBQ,EACnBR,GAAmBS,S,GA7Of1H,IAAMC,WCtBrB2H,E,4JAEF,WAEI,IAAI3O,EAAQtB,EAAc0C,gBAAgByD,KAAKC,MAAM5H,KAAM2H,KAAKC,MAAMtF,UAAUE,WAE5EsI,EAAa,QAKjB,OAJc,IAAVhI,IACAgI,EAAa,QAIb,qBAAKzC,UAAU,yEAAf,SACI,oBAAGA,UAAU,kEAAb,UACI,sBAAMA,UAAU,cAAhB,SAA+BvF,IADnC,UACwDgI,W,GAdjDjB,IAAMC,WAwBd2H,I,gCCxBA,SAASC,EAAM9J,GAE1B,MAA0B+J,oBAAS,GAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAsCF,mBAAS,IAA/C,mBAAKG,EAAL,KAAmBC,EAAnB,KAEIC,EAAkBC,iBAAO,MAE7B,SAAS9I,IACL0I,GAAU,GACVjK,EAAMsK,UAQV,IAAIlS,EAAO4H,EAAM5H,KAEbmS,EAAY,GAChB,GAAInS,EAAKsI,OAAQ,CAEbtI,EAAKsI,OAAO1F,SAAQ,SAAAwP,GAChBD,EAAUxQ,KACN,sBAAK0G,UAAU,OAAf,UACI,mBAAGA,UAAU,qDAAb,SACK+J,EAAM5K,QAEX,mBAAGa,UAAU,8DAAb,SACK+J,EAAM5J,YALf,sBAHA,QAeZ,IAAI6J,EAAa,GAEjB,GAAIrS,EAAKuN,QAAS,CACd,IAAIpL,EAAI,EACRnC,EAAKuN,QAAQ3K,SAAQ,SAAA0P,GACjB,IAAItJ,GAAU,EACTsJ,EAAO7E,eAAczE,EAAUpB,EAAMlB,SAAS4L,EAAOhO,OAC1D+N,EAAW1Q,KACP,sBAAK0G,UAAU,0CAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,mBAAGA,UAAU,+CAAb,SACKiK,EAAO9K,QAEZ,mBAAGa,UAAU,gDAAb,SACKiK,EAAO1J,iBAGhB,sBAAKP,UAAU,2BAAf,WACMiK,EAAO7E,eAAiBzE,EACtB,wBAAQX,UAAU,2JAEVqB,QAAS,WACL9B,EAAMoG,UAAUsE,EAAOhO,MAAM,EAAOgO,EAAO9M,eACvC8M,EAAOpE,aACPoE,EAAOpE,aAAY,IALnC,SAQKoE,EAAO9E,eAGZ,wBAAQnF,UAAU,uJAEVqB,QAAS,WACL9B,EAAMoG,UAAUsE,EAAOhO,MAAM,EAAMgO,EAAO9M,eACtC8M,EAAOpE,aACPoE,EAAOpE,aAAY,IALnC,SAQKoE,EAAOrE,iBAGfqE,EAAO7E,cACJ,wBAAQpF,UAAS,wBAAmByJ,EAAaQ,EAAOhO,MAAQ,6BAA+B,+BAA9E,sKAEToF,QAAS,YACD4I,EAAO5D,qBACFoD,EAAaQ,EAAOhO,OAK7BgO,EAAO7E,eACPsE,EAAgB,2BAAID,GAAL,kBAAoBQ,EAAOhO,MAAO,MALzCyN,EAAgB,2BAAID,GAAL,kBAAoBQ,EAAOhO,MAAO,MALrE,SAYKwN,EAAaQ,EAAOhO,MAAQ,UAAYgO,EAAO9E,oBA9ChE,uBAA8ErL,KAoDlFA,OAKR,IAAIoQ,EAAiB,GAErB,GAAIvS,EAAK8I,YAAa,CAElB,IAAI3G,EAAI,EACRnC,EAAK8I,YAAYlG,SAAQ,SAAA4P,GACrB,IAAIC,EAAUD,EACd,GAAIA,EAAWzJ,OAAQ,CACnB,IAAI2J,EAAIF,EAAWzJ,OACnB0J,EAAUC,EAAE1S,KAAKwR,IAAIkB,EAAEnS,KAAOmS,EAAE1J,QAAU0J,EAAExJ,SAEhDqJ,EAAe5Q,KACX,wBAAQ0G,UAAS,mCAA8BmK,EAAW9N,MAAzC,oCACT8C,MAAOiL,EAAQjL,MACfkC,QAAS,WACL+I,EAAQxJ,SACJuJ,EAAWrJ,OAAOA,KAJlC,SAOKsJ,EAAQrK,MAPb,sBAAuHjG,KAU3HA,OAMR,OACI,cAAC,IAAD,CAAQmL,KAAMsE,EAAQM,QAAS,WAAO/I,KAAUwJ,aAAcX,EAAiB3J,UAAS,UAAKT,EAAMlB,SAASkM,KAAO,OAAS,GAApC,uCAAxF,SACI,sBAAKvK,UAAU,yFAAf,UACI,sBAAMA,UAAU,qDAAqD,cAAY,OAAjF,oBAGA,cAAC,IAAOwK,QAAR,CAAgBxK,UAAU,sCAC1B,sBAAKA,UAAU,4KAAf,UACI,qBAAKA,UAAU,0DAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAS,2FAAsFrI,EAAK6I,oBAA3F,gCAAd,SACK7I,EAAKoI,OAEV,sBAAKC,UAAU,gDAAf,UACI,cAAC,IAAOyK,MAAR,CAAcC,GAAG,KAAK1K,UAAU,iEAAhC,SACKrI,EAAKwH,QAGTxH,EAAK+H,UACF,8BACI,mBAAGM,UAAU,sDAAb,SACKrI,EAAK+H,aAIjB/H,EAAKgN,gBACF,8BACKhN,EAAKgN,iBAGd,qBAAK3E,UAAU,OAAf,SACI,mBAAGA,UAAU,2CAAb,SACCrI,EAAKgI,YAGTmK,EAAUlQ,OAAS,GAChBkQ,EAEHnS,EAAK0N,UACF,8BACI,mBAAGrF,UAAU,+KAAb,SACKrI,EAAK0N,qBAS7B2E,EAAWpQ,OAAS,GACjBoQ,EAGHE,EAAetQ,OAAS,GACrB,qBAAKoG,UAAU,6CAAf,SACKkK,IAYT,sBAAKlK,UAAU,4EAAf,UACI,wBACI2K,KAAK,SACL3K,UAAS,wGAAmGrI,EAAKkI,mBAAxG,uFACElI,EAAKkI,mBADP,yBAC0ClI,EAAKkI,mBAD/C,wDAETwB,QAAS,WA7L7BmI,GAAU,GACVjK,EAAMqL,aAwLU,SAKKjT,EAAKiI,gBAETjI,EAAKqN,cACF,wBACI6F,IAAKlB,EACLgB,KAAK,SACL3K,UAAU,+UAGVqB,QAAS,WAAOP,KANpB,SAOKnJ,EAAKqN,0B,IC7LhC8F,E,kDAEF,WAAYvL,GAAQ,IAAD,8BACf,cAAMA,IAED4C,MAAQ,CACTC,SAAS,GAJE,E,sDASnB,SAAmBC,IACVA,EAAUC,QAAUhD,KAAKC,MAAM+C,QAChChD,KAAKiD,SAAS,CAAEH,SAAS,IAGzBC,EAAUC,SAAWhD,KAAKC,MAAM+C,QAChChD,KAAKiD,SAAS,CAAEH,SAAS,M,oBAIjC,WAAU,IAAD,OAEDjC,EAAUb,KAAKC,MAAMwL,OAASxN,MAAMC,KAAK8B,KAAKC,MAAMtF,UAAUE,WAAaoD,MAAMC,KAAK8B,KAAKC,MAAMtF,UAAUC,UAC3GxB,EAAU,GAEVA,EADAyH,EAAQvG,OAAS,EACPuG,EAAQ/C,KAAI,SAACzE,EAAW6J,GAC9B,OAAO,cAAC,EAAD,CAAOtJ,OAAQP,EAAuBmJ,IAAK,EAAGC,IAAK,EACtDtC,MAAO,EAAKF,MAAME,MAClBpB,SAAU,EAAKkB,MAAMlB,SACrBpE,UAAW,EAAKsF,MAAMtF,UACtBmG,UAAW,WACP,EAAKb,MAAMe,YAAY3H,EAAW,EAAK4G,MAAMwL,SAEjD1K,YAAa,WACT,EAAKd,MAAMc,YAAY1H,GAAW,IAEtC2H,YAAa,WACT,EAAKf,MAAMe,YAAY3H,GAAW,KAXJ6J,MAmBtC,qBAAKxC,UAAS,iCAA4BV,KAAKC,MAAMwL,OAAS,GAAK,gBAArD,sCAAd,SACI,mBAAG/K,UAAU,sDAAb,SACKV,KAAKC,MAAMwL,OAAX,uOAUjB,IAAItQ,EAAQtB,EAAc2C,gBAAgBqE,GAEtCsC,EAAa,QAMjB,OALc,IAAVhI,IACAgI,EAAa,SAIVC,EADuBpD,KAAKC,MAA3BmD,mBAEJ,sBAAK1C,UAAS,yCAAoCV,KAAKC,MAAMwL,OAAS,GAAK,gBAA7D,yDACJzL,KAAK6C,MAAMC,QAAU,gEAArB,4EACI9C,KAAKC,MAAMwL,OAAS,2CAA6C,qBAFjE,oDAAd,UAII,mBAAG/K,UAAU,yEAAb,SACKV,KAAKC,MAAMwL,OAAS,aAAe,uBAExC,qBAAK/K,UAAS,iCAA4BV,KAAKC,MAAMwL,OAAS,GAAK,kBAAnE,SACKrS,IAEJ4G,KAAKC,MAAMwL,QAAUzL,KAAKC,MAAMlB,SAASsE,eACtC,oBAAG3C,UAAU,8EAAb,UACI,sBAAMA,UAAU,cAAhB,SAA+BvF,IADnC,IACkDgI,a,GA/E1CjB,IAAMC,WAyFnBmB,eAAW,QA/GP,CAEfC,KAFe,SAEVtD,EAAOqC,EAASC,GACjB,IAAID,EAAQkB,UAAZ,CAGA,IAAMC,EAAOnB,EAAQ1E,UACrBqC,EAAMc,YAAY0C,EAAK7J,OAAQqG,EAAMwL,YAK7C,SAAiB/I,EAASJ,GACtB,MAAO,CACHc,kBAAmBV,EAAQmB,aAC3Bb,OAAQV,EAAQU,SAChBc,cAAexB,EAAQU,OAAO,CAAEe,SAAS,IACzCC,QAAS1B,EAAQ0B,UACjBC,SAAU3B,EAAQ4B,iBA6FXZ,CAAyCkI,GCjHlDE,G,4JAEF,WAEI,OACI,sBAAKhL,UAAU,mGAAf,UACI,mBAAGA,UAAU,sDAAb,qBAGA,sBAAKA,UAAU,yCAAf,UACI,cAAC,GAAD,CACI+K,QAAQ,EACRtL,MAAOH,KAAKC,MAAME,MAClBpB,SAAUiB,KAAKC,MAAMlB,SACrBpE,UAAWqF,KAAKC,MAAMtF,UACtBoG,YAAaf,KAAKC,MAAMc,YACxBC,YAAahB,KAAKC,MAAMe,cAE5B,cAAC,GAAD,CACIyK,QAAQ,EACRtL,MAAOH,KAAKC,MAAME,MAClBpB,SAAUiB,KAAKC,MAAMlB,SACrBpE,UAAWqF,KAAKC,MAAMtF,UACtBoG,YAAaf,KAAKC,MAAMc,YACxBC,YAAahB,KAAKC,MAAMe,wB,GAxBxBkB,IAAMC,WAkCfuJ,MCvBTC,GAAU,QAEVC,G,kDAEF,WAAY3L,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAI4L,EAAkBlN,EAAQG,0BAC1BgN,EAAe,KAEfzT,EAAO,CAAC,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,KAC3DsC,EAAY,CACZC,SAAU,IAAIrC,IACdsC,UAAW,IAAItC,KAGfwT,EAAMlS,EAAcmD,KAAK6O,EAAgB7M,iBAZ9B,OAcV+M,EAAIhS,UAQL+R,EAAe,CACXjM,MAAO,uBACPQ,QAAQ,uFACRC,cAAe,gBACfC,mBAAoB,MACpBW,oBAAqB,MACrBT,KAAO,cAAC,IAAD,CAAiBC,UAAU,uBAAuB,cAAY,UAZpEqL,EAAIjR,QACLzC,EAAO0T,EAAI1T,KACXsC,EAAYoR,EAAIpR,WAcpBkR,EAAgBZ,MAChBxE,SAASC,KAAKC,MAAMC,gBAAkBjI,EAAQE,gBAC9C4H,SAASI,cAAc,4BAA4BC,aAAa,UAAWnI,EAAQE,mBAEnF4H,SAASC,KAAKC,MAAMC,gBAAkBjI,EAAQC,iBAC9C6H,SAASI,cAAc,4BAA4BC,aAAa,UAAWnI,EAAQC,mBAGvF,EAAKiE,MAAQ,CACTxK,KAAMA,EACNsC,UAAWA,EACXwF,MAAO2L,EACP/M,SAAU8M,GA5CC,E,6CAiDnB,SAAUjT,EAAKuG,GAAkB,IAAb9B,EAAY,wDACxB0B,EAAWiB,KAAK6C,MAAM9D,SAC1BA,EAASnG,GAAOuG,EAChBa,KAAKiD,SAAS,CAAClE,SAAUA,IACrB1B,GACAsB,EAAQS,oBAAoBxG,EAAKuG,K,uBAIzC,SAAU6M,GACNhM,KAAKiD,SAAS,CACV9C,MAAO6L,M,2BAIf,WACIhM,KAAKiD,SAAS,CACV9C,MAAO,S,+BAIf,SAAkBvG,EAAQb,EAAMI,GAC5B,IAAId,EAAO2H,KAAK6C,MAAMxK,KACtBA,EAAKU,GAAMI,GAASa,KAAKJ,GACzBvB,EAAKU,GAAMI,GAASc,MAAK,SAACC,EAAGC,GACzB,OAAID,EAAEgG,YAAoB,EACtB/F,EAAE+F,aAAqB,EACpBhG,EAAEE,GAAGC,cAAcF,EAAEC,OAEhC4F,KAAKiD,SAAS,CAAC5K,KAAMA,IACrBwB,EAAcwD,KAAKhF,EAAM2H,KAAK6C,MAAMlI,UAAWqF,KAAK6C,MAAM9D,SAASC,mB,uBAGvE,SAAUpF,EAAQb,EAAMI,GAAU,IAAD,OAEzBd,EAAO2H,KAAK6C,MAAMxK,KAClByJ,EAAgBlI,EAAOsG,YACvB+L,EAAarS,EAAOqS,WAEpBC,EAASrS,EAAc6C,gBAAgB9C,EAAQvB,GAEnD,GAAK4T,IAAcC,GAAWpK,EAA9B,CAgBA,IAAIqK,EAAYtS,EAAc4C,kBAAkBpE,EAAKU,GAAMI,IAAY+B,WAAWtB,EAAOuB,OAErFgR,EAAY,IACZnM,KAAKoM,UAAU,CACXvM,MAAO,oBACPQ,QAAQ,iCAAD,OAAmC8L,EAAnC,4FACPzG,aAAc,UACdpF,cAAe,aACfC,mBAAoB,MACpBW,oBAAqB,MACrBT,KAAO,cAAC,IAAD,CAAiBC,UAAU,uBAAuB,cAAY,SACrEY,OAAQ,WACJ,EAAK+K,kBAAkBzS,EAAQb,EAAMI,MAMjD6G,KAAKqM,kBAAkBzS,EAAQb,EAAMI,QAjCjC6G,KAAKoM,UAAU,CACXvM,MAAO,0BACPQ,QAAQ,oBAAD,OAAsBzG,EAAOQ,GAA7B,oCAA2DuE,EAAQiB,eAAesM,EAAO/S,SAAS0G,MAAMoI,cAAxG,4BAAyItJ,EAAQgB,YAAYuM,EAAOnT,MAAMkP,cAA1K,UACPvC,aAAc,UACdpF,cAAe,aACfC,mBAAoB,MACpBW,oBAAqB,MACrBT,KAAO,cAAC,IAAD,CAAiBC,UAAU,uBAAuB,cAAY,SACrEY,OAAQ,WACJ,EAAK+K,kBAAkBzS,EAAQb,EAAMI,Q,uBA4BrD,SAAUmL,EAAavL,EAAMI,GACzB,IAAId,EAAO2H,KAAK6C,MAAMxK,KACtBA,EAAKU,GAAMI,GAASmT,OAAOhI,EAAa,GACxCtE,KAAKiD,SAAS,CAAC5K,KAAMA,IACrBwB,EAAcwD,KAAKhF,EAAM2H,KAAK6C,MAAMlI,UAAWqF,KAAK6C,MAAM9D,SAASC,mB,wBAGvE,SAAWpF,EAAQ2S,EAASC,EAAYC,EAASC,GAC7C,IAAIrU,EAAO2H,KAAK6C,MAAMxK,KACtB,IAAiB,IAAbkU,EACA,IAAK,IAAI/Q,EAAI,EAAGA,EAAInD,EAAKkU,GAASC,GAAYlS,OAAQkB,IAClD,GAAInD,EAAKkU,GAASC,GAAYhR,GAAGpB,KAAOR,EAAOQ,GAAI,CAC/C4F,KAAKc,UAAUtF,EAAG+Q,EAASC,GAC3B,MAIZxM,KAAK2D,UAAU/J,EAAQ6S,EAASC,K,yBAGpC,SAAY9S,EAAQiB,GAChB,IAAIF,EAAYqF,KAAK6C,MAAMlI,UACvBE,EACAF,EAAUE,UAAUJ,IAAIb,GAExBe,EAAUC,SAASH,IAAIb,GAE3BoG,KAAKiD,SAAS,CAACtI,UAAWA,IAC1Bd,EAAcwD,KAAK2C,KAAK6C,MAAMxK,KAAMsC,EAAWqF,KAAK6C,MAAM9D,SAASC,mB,yBAGvE,SAAYpF,EAAQiB,GAChB,IAAIF,EAAYqF,KAAK6C,MAAMlI,UACvBE,EACAF,EAAUE,UAAU8R,OAAO/S,GAE3Be,EAAUC,SAAS+R,OAAO/S,GAE9BoG,KAAKiD,SAAS,CAACtI,UAAWA,IAC1Bd,EAAcwD,KAAK2C,KAAK6C,MAAMxK,KAAMsC,EAAWqF,KAAK6C,MAAM9D,SAASC,mB,oBAGvE,WAAU,IAAD,OACL,OACI,cAAC4N,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACI,sBAAKpM,UAAS,UAAKV,KAAK6C,MAAM9D,SAASkM,KAAO,OAAS,IAAvD,UAEKjL,KAAK6C,MAAM1C,OACR,cAAC4J,EAAD,CAAO1R,KAAM2H,KAAK6C,MAAM1C,MACpBpB,SAAUiB,KAAK6C,MAAM9D,SACrBsH,UAAW,SAACzN,EAAKuG,GAAqB,IAAhB9B,EAAe,wDAAC,EAAKgJ,UAAUzN,EAAKuG,EAAK9B,IAC/DkN,QAAS,WACL,EAAKwC,iBAETzB,UAAW,WACH,EAAKzI,MAAM1C,MAAMmB,QACjB,EAAKuB,MAAM1C,MAAMmB,SAErB,EAAKyL,mBAIjB,sBAAKrM,UAAU,4DAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,cAAC,EAAD,CAAM4E,QAASqG,KACf,cAAC,EAAD,CACIxL,MAAO,SAAA6L,GACH,EAAKI,UAAUJ,IAEnB7F,aAAcnG,KAAK6C,MAAMxK,KAAKiC,OAAS,GACvC8L,QAAS,WACL,IAAI/N,EAAO,EAAKwK,MAAMxK,KACtBA,EAAK2B,KAAK,CAAC,GAAI,GAAI,KACnB,EAAKiJ,SAAS,CAAC5K,KAAMA,KAEzBiN,QAASqG,GACT5M,SAAUiB,KAAK6C,MAAM9D,SACrBsH,UAAW,SAACzN,EAAKuG,GAAqB,IAAhB9B,EAAe,wDAAC,EAAKgJ,UAAUzN,EAAKuG,EAAK9B,IAC/D2J,UAAW,WACP,EAAK/D,SAAS,CACN5K,KAAM,CAAC,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,KAC1DsC,UAAW,CACPE,UAAW,IAAItC,IACfqC,SAAU,IAAIrC,OAG1BsB,EAAcwD,KAAK,EAAKwF,MAAMxK,KAAM,EAAKwK,MAAMlI,UAAW,EAAKkI,MAAM9D,SAASC,oBAGtF,cAAC,EAAD,CACI3G,KAAM2H,KAAK6C,MAAMxK,KACjBsC,UAAWqF,KAAK6C,MAAMlI,UACtBgJ,UAAW,SAAC/J,EAAQb,EAAMI,GACtB,EAAKwK,UAAU/J,EAAQb,EAAMI,IAEjC4H,YAAa,SAACnH,EAAQiB,GAClB,EAAKkG,YAAYnH,EAAQiB,IAE7BmG,YAAa,SAACpH,EAAQiB,GAClB,EAAKmG,YAAYpH,EAAQiB,MAGjC,cAAC,EAAD,CACIxC,KAAM2H,KAAK6C,MAAMxK,KACjBsC,UAAWqF,KAAK6C,MAAMlI,eAI9B,sBAAK+F,UAAS,UAAKV,KAAK6C,MAAM9D,SAAS8C,QAAU,gBAAkB,GAArD,wEAAd,UACK7B,KAAK6C,MAAM9D,SAASpE,WACjB,cAAC,GAAD,CACIA,UAAWqF,KAAK6C,MAAMlI,UACtBoE,SAAUiB,KAAK6C,MAAM9D,SACrBoB,MAAO,SAAA6L,GACH,EAAKI,UAAUJ,IAEnBjL,YAAa,SAACnH,EAAQiB,GAClB,EAAKkG,YAAYnH,EAAQiB,IAE7BmG,YAAa,SAACpH,EAAQiB,GAClB,EAAKmG,YAAYpH,EAAQiB,MAIrC,cAAC,EAAD,CACIgG,QAASb,KAAK6C,MAAMxK,KACpBsC,UAAWqF,KAAK6C,MAAMlI,UACtBoE,SAAUiB,KAAK6C,MAAM9D,SACrBsH,UAAW,SAACzN,EAAKuG,GAAS,EAAKkH,UAAUzN,EAAKuG,IAC9CgB,MAAO,SAAA6L,GACH,EAAKI,UAAUJ,IAEnBrI,UAAW,SAAC/J,EAAQb,EAAMI,GACtB,EAAKwK,UAAU/J,EAAQb,EAAMI,IAEjC2H,UAAW,SAACwD,EAAavL,EAAMI,GAC3B,EAAK2H,UAAUwD,EAAavL,EAAMI,IAEtCuK,WAAY,SAAC9J,EAAQ2S,EAASC,EAAYC,EAASC,GAC/C,EAAKhJ,WAAW9J,EAAQ2S,EAASC,EAAYC,EAASC,IAE1D3L,YAAa,SAACnH,EAAQiB,GAClB,EAAKkG,YAAYnH,EAAQiB,IAE7BmG,YAAa,SAACpH,EAAQiB,GAClB,EAAKmG,YAAYpH,EAAQiB,IAG7B0J,iBAAkB,SAAAxL,GAEd,EAAKqT,UAAU,CACXvM,MAAO,mCACPQ,QAAQ,0CAAD,OAA4C1B,EAAQgB,YAAY5G,GAAMkP,cAAtE,+FACP3H,cAAe,cACfC,mBAAoB,SACpBmF,aAAc,QACdxE,oBAAqB,SACrBT,KAAO,cAAC,IAAD,CAAUC,UAAU,0BAA0B,cAAY,SACjEY,OAAQ,WACJ,IAAIjJ,EAAO,EAAKwK,MAAMxK,KACtBA,EAAKU,GAAMiB,KAAK,IAChB,EAAKiJ,SAAS,CAAC5K,KAAMA,yB,GAnS/C6J,IAAMC,WAkTTyJ,MC7TfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFzG,SAAS0G,eAAe,W","file":"static/js/main.d7a7b89c.chunk.js","sourcesContent":["import courses from './data/courses.json';\n\nfunction loadData(params) {\n\n    let data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n    let favoritesNoCredit = new Set();\n    let favoritesForCredit = new Set();\n\n    let loadedSomething = false;\n\n    try {\n\n        for (let pair of params.entries()) {\n\n            let key = pair[0];\n            let value = pair[1];\n\n            if (key.startsWith('y')) {\n\n                loadedSomething = true;\n                \n                let year = parseInt(key.substring(1).split('q')[0]);\n                let quarter = parseInt(key.split('q')[1]);\n                let classes = value.split(',');\n                let classData = [];\n\n                for (let id of classes) {\n                    let sp = id.split('_');\n                    let subjId = sp[0];\n                    let num = sp[1];\n                    let subj = courses.major_ids[subjId];\n                    let courseId = subj + ' ' + num;\n\n                    let course = CourseManager.getCourse(courseId);\n                    if (course == null) return { malformed: true };\n                    classData.push(course);\n                }\n\n                classData.sort((a, b) => {\n                    return a.id.localeCompare(b.id);\n                });\n\n                while (data.length < year + 1) {\n                    data.push([[], [], []]);\n                }\n    \n                while (data[year].length < quarter + 1) {\n                    data[year].push([]);\n                }\n\n                data[year][quarter] = classData;\n\n            }\n\n            if (key.startsWith('f')) {\n\n                loadedSomething = true;\n\n                let classesLists = value.split(';');\n                for (let i = 0; i < classesLists.length; i++) {\n                    let classes = classesLists[i].split(',');\n                    for (let id of classes) {\n                        if (id === '') continue;\n                        let sp = id.split('_');\n                        let subjId = sp[0];\n                        let num = sp[1];\n                        let subj = courses.major_ids[subjId];\n                        let courseId = subj + ' ' + num;\n                        if (i === 0) favoritesNoCredit.add(CourseManager.getCourse(courseId));\n                        else favoritesForCredit.add(CourseManager.getCourse(courseId));\n                    }\n                }\n\n            }\n        }\n\n    } catch (e) {\n        return { malformed: true };\n    }\n\n    if (!loadedSomething) return { empty: true };\n\n    return {\n        data: data,\n        favorites: {\n            noCredit: favoritesNoCredit,\n            forCredit: favoritesForCredit\n        }\n    };\n\n}\n\nfunction saveData(data, favorites) {\n    \n    let params = new URLSearchParams();\n\n    for (let y = 0; y < data.length; y++) {\n        for (let q = 0; q < data[y].length; q++) {\n            let classes = data[y][q].map(course => {\n                let sp = course.id.split(' ');\n                let subj = sp[0];\n                let num = sp[1];\n                let subjId = courses.majors[subj].id;\n                return subjId + '_' + num;\n            }).join(',');\n\n            if (classes.length > 0) params.set(`y${y}q${q}`, classes);\n        }\n    }\n\n    \n    let favoritesNoCredit = Array.from(favorites.noCredit);\n    let favoritesForCredit = Array.from(favorites.forCredit);\n\n    if (favoritesNoCredit.length > 0 || favoritesForCredit.length > 0) {\n\n        let conv = course => {\n            let courseId = course.id;\n            let sp = courseId.split(' ');\n            let subj = sp[0];\n            let num = sp[1];\n            let subjId = courses.majors[subj].id;\n            return subjId + '_' + num;\n        }\n\n        params.set('f', favoritesNoCredit.map(conv).join(',') + ';' + favoritesForCredit.map(conv).join(','));\n\n    }\n\n    return params;\n\n}\n\nfunction countCourseUnitsInHundreds(data) {\n    let total = 0;\n    data.forEach(course => {\n        total += parseFloat(course.units) * 100;\n        if (total % 100 === 2) total -= 2;\n        if (total % 50 === 1) total -= 1;\n        if (total % 50 === 49) total += 1;\n    })\n    return total;\n}\n\nlet CourseManager = {\n\n    data: courses,\n\n    getDistroFulfillment: data => {\n\n        let df = [[[], [], [], [], [], []]];\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n\n                    let course = data[y][q][c];\n                    if (!course.distros) continue;\n                    let distroStr = course.distros;\n\n                    let dfl = df.length;\n                    for (let i = 0; i < dfl; i++) {\n                        for (let d = 0; d < distroStr.length; d++) {\n\n                            // deep copy lol\n                            let thisDf = JSON.parse(JSON.stringify(df[i]));\n                            let di = parseInt(distroStr[d]) - 1;\n                            thisDf[di].push(course.id);\n                            df.push(thisDf);\n\n                        }\n                        \n                    }\n\n                }\n            }\n        }\n        for (let i = 0; i < df.length; i++) {\n            console.log(df[i]);\n        }\n    },\n\n    getDistroPositions: data => {\n        \n        let distroPos = [[], [], [], [], [], []];\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n\n                    let more = data[y][q][c].more;\n                    if (!more) continue;\n\n                    for (let i = 0; i < 6; i++) {\n                        if (more.includes(`w${i}`)) {\n                            distroPos[i].push(c);\n                            break;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        return distroPos;\n\n    },\n\n    getTotalCredits: (data, favoritesForCredit) => {\n\n        let total = 0;\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                total += countCourseUnitsInHundreds(data[y][q]);\n                if (total % 100 === 2) total -= 2;\n                if (total % 50 === 1) total -= 1;\n                if (total % 50 === 49) total += 1;\n            }\n        }\n\n        total += countCourseUnitsInHundreds(favoritesForCredit);\n        if (total % 100 === 2) total -= 2;\n        if (total % 50 === 1) total -= 1;\n        if (total % 50 === 49) total += 1;\n\n        return total / 100;\n\n    },\n\n    getExtraCredits: favoritesForCredit => {\n        return countCourseUnitsInHundreds(favoritesForCredit) / 100;\n    },\n\n    getQuarterCredits: quarter => {\n        return countCourseUnitsInHundreds(quarter) / 100;\n    },\n\n    duplicateCourse: (course, data) => {\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n                    if (data[y][q][c].id === course.id) {\n                        return {\n                            year: y,\n                            quarter: q\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n\n    },\n\n    getCourse: name => {\n        for (let course of courses.courses) {\n            if (course.id === name) {\n                return course;\n            }\n        }\n        return null;\n    },\n\n    getCourseColor: id => {\n        let subj = id.split(' ')[0];\n        return courses.majors[subj].color;\n    },\n\n    load: fallbackToStorage => {\n\n        let data = CourseManager.loadFromURL();\n\n        if (data.malformed) {\n            return data;\n        }\n\n        if (data.empty && fallbackToStorage) {\n            let storageData = CourseManager.loadFromStorage();\n            if (storageData.data && storageData.favorites) {\n                CourseManager.save(storageData.data, storageData.favorites, false);\n            }\n            return storageData;\n        }\n\n        return data;\n\n    },\n\n    loadFromURL: () => {\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        return loadData(params);\n    },\n\n    loadFromStorage: () => {\n        let dataStr = localStorage.getItem('data');\n        if (dataStr == null) return { empty: true };\n        let params = new URLSearchParams(dataStr);\n        return loadData(params);\n    },\n\n    save: (data, favorites, saveToStorage) => {\n\n        let params = saveData(data, favorites);\n        let paramsStr = params.toString();\n\n        window.history.replaceState({}, '', `${window.location.pathname}?${paramsStr}`);\n\n        if (saveToStorage) {\n            localStorage.setItem('data', paramsStr);\n        }\n\n    }\n\n}\n\nexport default CourseManager;","let Utility = {\n\n    BACKGROUND_LIGHT: '#FFFFFF',\n    BACKGROUND_DARK: '#262626',\n\n    loadSwitchesFromStorage: () => {\n        let switches = {\n            save_to_storage: true\n        };\n        let keys = Object.keys(localStorage);\n        for (let i = 0; i < keys.length; i++) {\n            if (keys[i].startsWith('switch_')) {\n                let val = localStorage.getItem(keys[i]);\n                let switchId = keys[i].substring(7);\n                if (val === 'true') val = true;\n                else if (val === 'false') val = false;\n                switches[switchId] = val;\n            }\n        }\n        return switches;\n    },\n\n    saveSwitchToStorage: (key, val) => {\n        localStorage.setItem('switch_' + key, val);\n    },\n\n    getDistroAcronym: distroString => {\n        let distro = distroString.split(' ');\n        let acronym = '';\n        distro.forEach(d => acronym += d[0]);\n        return acronym;\n    },\n\n    convertDistros: distros => {\n\n        let strings = [];\n\n        if (!distros) return strings;\n\n        for (let i = 0; i < distros.length; i++) {\n\n            let d = parseInt(distros[i]);\n\n            switch (d) {\n                case 1:\n                    strings.push('Natural Sciences')\n                    break;\n                case 2:\n                    strings.push('Formal Studies')\n                    break;\n                case 3:\n                    strings.push('Social and Behavioral Sciences')\n                    break;\n                case 4:\n                    strings.push('Historical Studies')\n                    break;\n                case 5:\n                    strings.push('Ethics and Values')\n                    break;\n                case 6:\n                    strings.push('Literature and Fine Arts')\n                    break;\n                case 7:\n                    strings.push('Interdisciplinary Studies')\n                    break;\n                default:\n                    strings.push('Unknown')\n                    break;\n            }\n\n        }\n\n        return strings;\n\n    },\n\n    convertYear: num => {\n        switch(num) {\n            case 0:\n                return 'FIRST';\n            case 1:\n                return 'SECOND';\n            case 2:\n                return 'THIRD';\n            case 3:\n                return 'FOURTH';\n            case 4:\n                return 'FIFTH';\n            case 5:\n                return 'SIXTH';\n            case 6:\n                return 'SEVENTH';\n            case 7:\n                return 'EIGHTH';\n            case 8:\n                return 'NINTH';\n            case 9:\n                return 'TENTH';\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    convertQuarter: num => {\n        switch (num) {\n            case 0:\n                return {title: 'FALL', color: 'orange'};\n            case 1:\n                return {title: 'WINTER', color: 'sky'};\n            case 2:\n                return {title: 'SPRING', color: 'lime'};\n            case 3:\n                return {title: 'SUMMER', color: 'yellow'};\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    prereqColor: num => {\n        switch (num) {\n            case 0:\n                return 'red';\n            case 1:\n                return 'blue';\n            case 2:\n                return 'green';\n            case 3:\n                return 'yellow';\n            case 4:\n                return 'purple';\n            default:\n                return 'gray';\n        }\n    }\n\n}\n\nexport default Utility;","import React from 'react';\nimport { DragSource } from 'react-dnd';\nimport CourseManager from '../CourseManager.js';\nimport Utility from '../Utility.js';\nimport { TrashIcon, DocumentIcon, BookmarkIcon } from '@heroicons/react/outline';\nimport { BookmarkIcon as BookmarkIconSolid } from '@heroicons/react/solid';\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = {\n            course: props.course,\n            from: {\n                year: props.yi,\n                quarter: props.qi\n            }\n        }\n        return item;\n    }\n  \n  }\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Class extends React.Component {\n\n    openInfo() {\n        let course = this.props.course;\n        let color = CourseManager.getCourseColor(course.id);\n\n        if (course.placeholder) {\n            this.props.alert({\n                title: 'Placeholder',\n                subtitle: course.name,\n                message: `If you aren't sure which course to take to fulfill a certain requirement, you can use a placeholder! Search using 'placeholder' or by requirement category to find placeholders.`,\n                confirmButton: 'Close',\n                confirmButtonColor: color,\n                iconBackground: color,\n                icon: (<DocumentIcon className={`h-6 w-6 text-${color}-600`} aria-hidden='true' />),\n            })\n            return;\n        }\n\n        let extras = [];\n\n        if (course.prereqs) {\n            extras.push(\n                {\n                    title: 'PREREQUISITES',\n                    content: course.prereqs\n                }\n            )\n        }\n\n        if (course.distros) {\n            let distros = Utility.convertDistros(course.distros);\n            extras.push(\n                {\n                    title: 'DISTRIBUTION AREAS',\n                    content: distros.join(', ')\n                }\n            )\n        }\n\n        extras.push(\n            {\n                title: 'UNITS',\n                content: course.units\n            }\n        )\n\n        let delCourse = this.props.delCourse;\n        let favorites = this.props.favorites;\n        let addFavorite = this.props.addFavorite;\n        let delFavorite = this.props.delFavorite;\n\n        this.props.alert({\n            title: course.id,\n            subtitle: course.name,\n            message: course.description,\n            confirmButton: 'Close',\n            confirmButtonColor: color,\n            iconBackgroundColor: color,\n            icon: (<DocumentIcon className={`h-6 w-6 text-${color}-600`} aria-hidden='true' />),\n            extras: extras,\n            editButtons: [\n                {\n                    toggle: {\n                        data: favorites.noCredit,\n                        key: course,\n                        enabled: {\n                            title: 'Remove from My List',\n                            icon: (<BookmarkIconSolid className='w-6 h-6' />),\n                            action: () => {\n                                delFavorite(course, false);\n                            }\n                        },\n                        disabled: {\n                            title: 'Add to My List',\n                            icon: (<BookmarkIcon className='w-6 h-6' />),\n                            action: () => {\n                                addFavorite(course, false);\n                            }\n                        }\n                    },\n                    color: 'indigo'\n                },\n                {\n                    title: 'Remove course',\n                    icon: <TrashIcon className='w-6 h-6' />,\n                    color: 'red',\n                    action: () => {\n                        delCourse();\n                    },\n                    close: true\n                }\n            ]\n        })\n    }\n\n    render() {\n\n        let course = this.props.course;\n        let color = CourseManager.getCourseColor(course.id);\n\n        const { isDragging, connectDragSource } = this.props;\n\n        let showMoreInfo = this.props.switches.more_info && !this.props.switches.compact;\n\n        let isPlaceholder = course.placeholder;\n        let units = parseFloat(course.units);\n\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${color}-100 dark:bg-gray-800\n            border-2 border-${color}-300 border-opacity-60 overflow-visible w-full text-left compact:px-2 compact:py-05\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 group ${isDragging ? 'cursor-grab' : 'cursor-pointer'}`}\n                    onClick={() => this.openInfo()}>\n                <p className={`text-md ${isPlaceholder ? 'font-normal' : 'font-bold'} text-black dark:text-gray-50 compact:text-sm overflow-hidden whitespace-nowrap`}>\n                    {isPlaceholder ? course.name : course.id}\n                </p>\n                <p className={`text-xs ${isPlaceholder ? 'font-light' : 'font-normal'} text-black dark:text-gray-50 overflow-hidden w-full block whitespace-nowrap overflow-ellipsis compact:hidden`} title={course.name}>\n                    {isPlaceholder ? 'PLACEHOLDER' : course.name}\n                </p>\n                {showMoreInfo &&\n                    <div>\n                        {course.prereqs &&\n                            <div className='mt-4 text-gray-500 dark:text-gray-400'>\n                                <p className='text-xs font-bold'>\n                                    PREREQUISITES\n                                </p>\n                                <p className='m-0 p-0 text-xs font-light whitespace-normal'>\n                                    {course.prereqs}\n                                </p>\n                            </div>\n                        }\n                        {course.distros &&\n                            <div className='mt-4 text-gray-500 dark:text-gray-400'>\n                                <p className='text-xs font-bold'>\n                                    DISTRIBUTION AREAS\n                                </p>\n                                <p className='m-0 p-0 text-xs font-light whitespace-normal'>\n                                    {Utility.convertDistros(course.distros).join(', ')}\n                                </p>\n                            </div>\n                        }\n                        <div className='mt-1'>\n                            <p className='text-xs text-right text-gray-500 dark:text-gray-400 font-light'>\n                                <span className='font-medium'>{units}</span> {units === 1 ? 'unit' : 'units'}\n                            </p>\n                        </div>\n                    </div>\n                }\n                <button className='absolute -top-2 -right-2 p-0.5 rounded-full bg-gray-200 hover:bg-red-100 dark:bg-gray-700\n                        text-gray-500 dark:text-white text-xs opacity-80 hover:text-red-400 dark:hover:text-red-400 hover:opacity-100\n                        transition-all duration-150 hidden group-hover:block z-20' onClick={e => {\n                            e.stopPropagation();\n                            this.props.delCourse();\n                        }}>\n                    <TrashIcon className='w-5 h-5'/>\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default DragSource('Class', classSource, collect)(Class);","import React from 'react';\nimport Class from './Class.js';\nimport CourseManager from '../CourseManager.js';\nimport { DropTarget } from 'react-dnd';\n\nconst quarterTarget = {\n\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        if (item.from) {\n            props.moveCourse(item.course, item.from.year, item.from.quarter, props.yi, props.qi);\n        } else {\n            props.addCourse(item.course);\n        }\n        return { moved: true };\n    }\n\n}\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nclass Quarter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        let content = this.props.content;\n        let classes = [];\n        if (content) {\n            if (content.length > 0) {\n                classes = content.map((classData, index) => {\n                    return <Class course={classData} key={index} yi={this.props.yi} qi={this.props.qi}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    favorites={this.props.favorites}\n                    addFavorite={this.props.addFavorite}\n                    delFavorite={this.props.delFavorite}\n                    delCourse={() => {\n                        this.props.delCourse(index);\n                    }}/>\n                })\n            } else {\n                classes = (\n                    <div className='p-2 compact:px-2 compact:py-0.5 rounded-lg bg-white dark:bg-gray-900 border-2 border-dashed border-black dark:border-gray-500\n                    overflow-hidden whitespace-nowrap opacity-40'>\n                        <p className='text-md font-bold text-black dark:text-white'>\n                            No classes to show.\n                        </p>\n                        <p className='compact:hidden text-xs dark:text-white'>\n                            Use the search bar.\n                        </p>\n                    </div>\n                )\n            }\n\n        }\n\n        let units = CourseManager.getQuarterCredits(content);\n\n        let unitString = 'units';\n        if (units === 1) {\n            unitString = 'unit';\n        }\n\n        const { connectDropTarget } = this.props;\n\n        return connectDropTarget(\n            <div className={`relative block rounded-lg px-8 pt-4 pb-8 border-2\n                ${this.state.hovered ? `border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50` : `border-solid bg-${this.props.color}-50 dark:bg-gray-800 border-${this.props.color}-400`}\n                space-y-3 h-full shadow-lg compact:py-2 compact:shadow-sm`}>\n                <p className='text-center font-bold text-md m-0 p-0 text-gray-600 dark:text-gray-400 compact:text-sm'>\n                    {this.props.title}\n                </p>\n                {classes}\n                {this.props.switches.quarter_units &&\n                    <p className='absolute right-2 top-0 text-right text-xs p-0 m-0 text-gray-400 font-normal'>\n                        <span className='font-medium'>{units}</span> {unitString}\n                    </p>\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default DropTarget('Class', quarterTarget, collect)(Quarter);","import React from 'react';\nimport Quarter from './Quarter.js';\nimport Utility from '../Utility.js';\nimport { PlusIcon, ChevronUpIcon, ChevronDownIcon } from '@heroicons/react/outline';\n\nclass Year extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hidden: false\n        }\n    }\n\n    render() {\n\n        let content = this.props.content;\n\n        let quarters = [];\n        if (content) {\n            quarters = content.map((quarter, index) => {\n                let {title, color} = Utility.convertQuarter(index);\n                return <Quarter title={title} color={color} content={quarter} key={index} yi={this.props.yi} qi={index}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    addCourse={course => {\n                        this.props.addCourse(course, index);\n                    }}\n                    delCourse={courseIndex => {\n                        this.props.delCourse(courseIndex, index);\n                    }}\n                    moveCourse={this.props.moveCourse}\n                    favorites={this.props.favorites}\n                    addFavorite={this.props.addFavorite}\n                    delFavorite={this.props.delFavorite}\n                />\n                \n            })\n        }\n\n        return (\n\n            <div className='relative p-4 border-4 border-gray-200 dark:border-gray-700 rounded-lg m-5 shadow-sm bg-white dark:bg-gray-800\n                    compact:border-0 compact:shadow-none compact:my-0 compact:py-2'>\n                <p className={`text-center text-2xl text-gray-300 font-bold compact:text-sm compact:text-black dark:text-gray-500 ${this.state.hidden ? '' : 'pb-2'}`}>\n                    {this.props.title}\n                </p>\n                {!this.state.hidden &&\n                    <div className={`grid grid-cols-1 ${quarters.length === 4 ? 'lg:grid-cols-4' : 'lg:grid-cols-3'} gap-12`}>\n                        {quarters}\n                    </div>\n                }\n                <div className='absolute right-1 top-1 text-gray-300 dark:text-gray-500'>\n                    {quarters.length < 4 &&\n                        <button className='inline-block p-1 bg-transparent hover:text-yellow-300 dark:hover:text-yellow-300'\n                                title='Add summer quarter'\n                                onClick={() => {\n                                    this.props.addSummerQuarter(this.props.yi);\n                                }}>\n                            <PlusIcon className='w-6 h-6'/>\n                        </button>\n                    }\n                    <button className='inline-block p-1 bg-transparent hover:text-red-400 dark:hover:text-red-400'\n                            title={this.state.hidden ? 'Show this year\\'s courses' : 'Hide this year\\'s courses'}\n                            onClick={() => {\n                                this.setState({hidden: !this.state.hidden});\n                            }}>\n                        {this.state.hidden ? <ChevronDownIcon className='w-6 h-6'/> : <ChevronUpIcon className='w-6 h-6'/>}\n                    </button>\n                </div>\n                \n            </div>\n\n        );\n    }\n\n}\nexport default Year;","import React from 'react';\nimport Year from './Year.js';\nimport Utility from '../Utility.js';\n\nclass Content extends React.Component { \n\n    render() {\n        let content = this.props.content;\n        let years = [];\n        if (content) {\n            years = content.map((year, index) => {\n                return <Year title={Utility.convertYear(index) + ' YEAR'} content={year} yi={index} key={index}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    addCourse={(course, quarter) => {\n                        this.props.addCourse(course, index, quarter);\n                    }}\n                    delCourse={(courseIndex, quarter) => {\n                        this.props.delCourse(courseIndex, index, quarter);\n                    }}\n                    moveCourse={this.props.moveCourse}\n                    addSummerQuarter={this.props.addSummerQuarter}\n                    favorites={this.props.favorites}\n                    addFavorite={this.props.addFavorite}\n                    delFavorite={this.props.delFavorite}\n                />;\n            })\n        }\n        return (\n            <div className='bg-white dark:bg-gray-800'>\n                {years}\n            </div>\n        );\n    }\n}\n\nexport default Content;","import React from 'react';\n\nclass Info extends React.Component {\n\n    render() {\n        return (\n            <div className='flex items-center justify-center my-4 px-4 py-3 text-black text-center whitespace-nowrap bg-purple-50 dark:bg-gray-800 border-2 border-purple-800 rounded-3xl dark:border-purple-300'>\n                <svg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='calendar' class='mx-2 w-6 h-6 text-purple-800 dark:text-purple-300 svg-inline--fa fa-calendar fa-w-14' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'><path fill='currentColor' d='M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z'></path></svg>\n                <p className='text-2xl font-normal text-purple-800 dark:text-purple-300'>\n                    Plan Northwestern\n                </p>\n            </div>\n        )\n    }\n\n}\n\nexport default Info;","import React from 'react';\nimport Utility from '../../Utility.js';\nimport { SaveIcon, PlusIcon, InformationCircleIcon, ExclamationIcon, CogIcon } from '@heroicons/react/outline';\n\nfunction TaskBarButton(props) {\n    return (\n        <button className={`border-2 rounded-md border-gray-400 bg-gray-50 text-gray-600\n                hover:border-${props.color}-500 hover:bg-${props.color}-50 hover:text-${props.color}-500\n                dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400\n                dark:hover:border-${props.color}-500 dark:hover:bg-${props.color}-800 dark:hover:text-${props.color}-100\n                transition-all duration-150 ${props.span ? `col-span-${props.span}` : ''}\n                ${props.active ? `border-${props.color}-400 bg-${props.color}-50 text-${props.color}-400 dark:border-${props.color}-600 dark:bg-${props.color}-900 dark:text-${props.color}-200` : ``}`}\n                onClick={() => {\n                    props.action();\n                }}>\n            {props.name}\n        </button>\n    )\n}\n\nclass TaskBar extends React.Component {\n\n    render() {\n        return (\n\n            <div className='grid grid-cols-3 px-4 gap-4 text-xs'>\n\n                <TaskBarButton name='About' color='purple' action={() => {\n\n                    this.props.alert({\n                        title: 'Plan Northwestern',\n                        customSubtitle: (\n                            <p className='text-md font-light text-gray-500 dark:text-gray-400'>\n                                version {this.props.version} by <a className='text-purple-500 dark:text-purple-300 opacity-100 hover:opacity-60 transition-all duration-150'\n                                                                    href='https://dilanxd.com'\n                                                                    target='_blank'\n                                                                    rel='noreferrer'>Dilan N</a>\n                            </p>\n                        ),\n                        message: 'An easy and organized way to plan out your classes at Northwestern. Data is all saved in the URL, so save the link to your plan to access it later or share with friends.',\n                        confirmButton: 'View on GitHub',\n                        confirmButtonColor: 'purple',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'purple',\n                        icon: (<InformationCircleIcon className='h-6 w-6 text-purple-600' aria-hidden='true' />),\n                        action: () => {\n                            window.open('https://github.com/dilanx/plan-northwestern', '_blank');\n                        },\n                        options: [\n                            {\n                                name: 'about_change_log',\n                                title: `What's new?`,\n                                description: `Check out what changes have been made in the latest update.`,\n                                buttonTextOn: `View the change log`,\n                                singleAction: () => {\n                                    window.open('https://github.com/dilanx/plan-northwestern/blob/main/CHANGELOG.md', '_blank');\n                                }\n                            },\n                            {\n                                name: 'about_coming_soon',\n                                title: 'Coming soon',\n                                description: `Check out what's been requested and what I'm working on on the GitHub issues page. Check this out before you send feedback in case someone else has already requested it.`,\n                                buttonTextOn: `See what's coming`,\n                                singleAction: () => {\n                                    window.open('https://github.com/dilanx/plan-northwestern/issues?q=', '_blank');\n                                }\n                            },\n                            {\n                                name: 'about_feedback',\n                                title: 'Share your thoughts!',\n                                description: `Find any bugs, notice any errors in course data, or have any suggestions? Let me know! I'm always interested in making the site better.`,\n                                buttonTextOn: 'Leave feedback',\n                                singleAction: () => {\n                                    window.open('https://github.com/dilanx/plan-northwestern/blob/main/FEEDBACK.md', '_blank');\n                                }\n                            }\n                        ]\n\n                    })\n\n                }}/>\n\n                <TaskBarButton name='Save / Share' color='emerald' action={() => {\n                    this.props.alert({\n                        title: 'Ready to share!',\n                        message: 'All of your plan data is stored in the URL. When you make changes to your plan, the URL is updated to reflect those changes. Save it somewhere, or share with a friend!',\n                        confirmButton: 'Copy to clipboard',\n                        confirmButtonColor: 'emerald',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'emerald',\n                        icon: (<SaveIcon className='h-6 w-6 text-emerald-600' aria-hidden='true' />),\n                        textView: window.location.href,\n                        action: () => {\n                            navigator.clipboard.writeText(window.location.href);\n                        }\n                    });\n                }}/>\n\n                <TaskBarButton name='Add Year' color='cyan' action={() => {\n                    if (this.props.allowAddYear) {\n                        this.props.alert({\n                            title: 'Add a year?',\n                            message: 'This will add another year to your plan. You can remove it by removing all classes from that year and refreshing the page.',\n                            confirmButton: 'Add year',\n                            confirmButtonColor: 'cyan',\n                            cancelButton: 'Close',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<PlusIcon className='h-6 w-6 text-cyan-600' aria-hidden='true' />),\n                            action: () => {\n                                this.props.addYear();\n                            }\n                        });\n                    } else {\n                        this.props.alert({\n                            title: `Can't add another year :(`,\n                            message: `You can't add more than 10 years.`,\n                            confirmButton: 'Close',\n                            confirmButtonColor: 'cyan',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<ExclamationIcon className='h-6 w-6 text-cyan-600' aria-hidden='true' />),\n                        });\n                    }\n                }}/>\n\n                <TaskBarButton name='Settings' color='yellow' action={() => {\n                    this.props.alert({\n                        title: 'Settings',\n                        message: `Customize your Plan Northwestern experience! These settings are saved in your browser and not in the URL.`,\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'yellow',\n                        iconBackgroundColor: 'yellow',\n                        icon: (<CogIcon className='h-6 w-6 text-yellow-600' aria-hidden='true' />),\n                        switches: this.props.switches,\n                        setSwitch: this.props.setSwitch,\n                        options: [\n                            {\n                                name: 'dark',\n                                title: 'Dark mode',\n                                description: `Become one with the night.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true,\n                                bonusAction: newSwitch => {\n                                    let color = newSwitch ? Utility.BACKGROUND_DARK : Utility.BACKGROUND_LIGHT;\n                                    document.body.style.backgroundColor = color;\n                                    document.querySelector('meta[name=\"theme-color\"]').setAttribute('content', color);\n                                }\n                            },\n                            {\n                                name: 'compact',\n                                title: 'Compact mode',\n                                description: `It's a bit uglier I think, but you can view more on the screen at once without needing to scroll.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'quarter_units',\n                                title: 'Show units per quarter',\n                                description: 'Reveal the unit count per quarter.',\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'more_info',\n                                title: 'Show more info on classes',\n                                description: `See prerequisites and distribution areas on the class items without having to click on their info button. The info won't display if compact mode is enabled.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'save_to_storage',\n                                title: 'Remember most recent plan',\n                                description: `If you visit this site without a full plan URL, your most recently modified plan will be loaded.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'clear_plan',\n                                title: 'Clear plan',\n                                description: `Clear all of your current plan data, which includes everything for each year and everything in My List. Make sure to save the current URL somewhere if you don't want to lose it.`,\n                                buttonTextOn: 'Clear',\n                                requireConfirmation: true,\n                                singleAction: () => {\n                                    this.props.clearData();\n                                }\n                            }\n                        ]\n                    })\n                }}/>\n\n                <TaskBarButton name='My List' color='indigo' active={this.props.switches.favorites} span='2' action={() => {\n                    this.props.setSwitch('favorites', !this.props.switches.favorites);\n                }}/>\n\n            </div>\n        )\n    }\n\n}\n\nexport default TaskBar;","import React from 'react';\nimport Utility from '../../Utility.js';\nimport { DragSource } from 'react-dnd'\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = { course: props.course }\n        return item;\n    }\n\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nconst PLACEHOLDER_MESSAGE = `Don't know which specific class to take from a certain requirement category? Use a placeholder! Search for 'placeholder' to view all.`\n\nclass SearchClass extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let distros = [];\n        let distroStrings = Utility.convertDistros(this.props.course.distros);\n\n        for (let i = 0; i < distroStrings.length; i++) {\n            distros.push(\n                <p className='m-0 p-0 text-xs text-gray-500 dark:text-gray-400 font-light' key={`distro-${i}`}>\n                    {distroStrings[i]}\n                </p>\n            )\n        }\n\n        this.state = {\n            distros: distros\n        }\n\n    }\n\n    render() {\n        const { isDragging, connectDragSource } = this.props;\n        let isPlaceholder = this.props.course.placeholder;\n        let units = parseFloat(this.props.course.units);\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${this.props.color}-100 dark:bg-gray-800\n            rounded-lg border-2 border-${this.props.color}-300 border-opacity-60\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 m-4 cursor-pointer ${isDragging ? 'cursor-grab ' : 'cursor-pointer'}`}\n            onClick={() => {\n                if (this.props.select) this.props.select(this.props.course);\n            }}>\n                <p className='text-lg font-bold text-black dark:text-gray-50'>\n                    {isPlaceholder ? this.props.course.name : this.props.course.id}\n                </p>\n                <p className='text-sm text-black dark:text-gray-50'>\n                    {isPlaceholder ? 'PLACEHOLDER' : this.props.course.name}\n                </p>\n                <p className='text-xs mt-4 text-gray-700 dark:text-gray-300'>\n                    {isPlaceholder ? PLACEHOLDER_MESSAGE : this.props.course.description}\n                </p>\n                {this.props.course.prereqs &&\n                    <div className='mt-4'>\n                        <p className='text-xs text-gray-500 dark:text-gray-400 font-bold'>\n                            PREREQUISITES\n                        </p>\n                        <p className='m-0 p-0 text-xs text-gray-500 dark:text-gray-400 font-light'>\n                            {this.props.course.prereqs}\n                        </p>\n                    </div>\n                }\n                {this.state.distros.length > 0 &&\n                    <div className='mt-4'>\n                        <p className='text-xs text-gray-500 dark:text-gray-400 font-bold'>\n                            DISTRIBUTION AREAS\n                        </p>\n                        {this.state.distros}\n                    </div>\n                }\n                <div className='mt-1'>\n                    <p className='text-xs text-right text-gray-500 dark:text-gray-400 font-light'>\n                        <span className='font-medium'>{units}</span> {units === 1 ? 'unit' : 'units'}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default DragSource('Class', classSource, collect)(SearchClass);","import Utility from '../../Utility.js';\n\nfunction AddButton(props) {\n    return (\n        <button className={`text-center bg-${props.color}-400 text-white font-medium p-2 block\n        mx-auto w-2/3 rounded-md opacity-100 hover:opacity-60 shadow-lg transition-all duration-150 my-2`} onClick={() => {\n            props.action();\n        }}>\n            {props.text}\n        </button>\n    )\n}\n\nfunction AddButtonSection(props) {\n    \n    let withSummer = (\n        <div className='grid grid-cols-4 gap-0'>\n            <AddButton text='Fa' color='orange' action={() => {props.action(0);}}/>\n            <AddButton text='Wi' color='sky' action={() => {props.action(1);}}/>\n            <AddButton text='Sp' color='lime' action={() => {props.action(2);}}/>\n            <AddButton text='Su' color='yellow' action={() => {props.action(3);}}/>\n        </div>\n    )\n\n    let withoutSummer = (\n        <div className='grid grid-cols-3 gap-0'>\n            <AddButton text='Fall' color='orange' action={() => {props.action(0);}}/>\n            <AddButton text='Winter' color='sky' action={() => {props.action(1);}}/>\n            <AddButton text='Spring' color='lime' action={() => {props.action(2);}}/>\n        </div>\n    )\n\n    return (\n        <div className='py-2'>\n            <p className='text-center text-gray-500 font-bold p-2 text-sm'>\n                {props.title}\n            </p>\n            {props.size === 4 ? withSummer : withoutSummer}\n        </div>\n    )\n}\n\n\n\nexport default function AddButtons(props) {\n\n    let data = props.data;\n    \n    let years = data.length;\n    \n    let sections = [];\n    for (let y = 0; y < years; y++) {\n        sections.push(<AddButtonSection title={`${Utility.convertYear(y)} YEAR`} size={data[y].length} action={quarter => {props.action(y, quarter);}} key={y}/>);\n    }\n    \n\n    return (\n        <div className=''>\n            {sections}\n        </div>\n    )\n\n}","import React from 'react';\nimport SearchClass from './SearchClass.js';\nimport AddButtons from './AddButtons.js';\nimport CourseManager from '../../CourseManager.js';\nimport { SearchIcon, BookOpenIcon, ArrowRightIcon, SaveIcon, DotsHorizontalIcon } from '@heroicons/react/outline';\n\nconst SEARCH_RESULT_LIMIT = 100;\nvar shortcut = null;\n\nfunction MiniContentBlock(props) {\n    return (\n        <div className='text-center p-4'>\n            <div className='mx-auto my-1 flex items-center justify-center text-gray-500 dark:text-gray-400'>\n                {props.icon}\n            </div>\n            <p className='text-lg font-medium text-gray-500 dark:text-gray-400'>\n                {props.title}\n            </p>\n            <p className='text-sm font-light text-gray-400 dark:text-gray-500'>\n                {props.text}\n            </p>\n        </div>\n    )\n}\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n            current: null,\n            shortcut: null\n        }\n\n    }\n\n    searchMessage(title, subtitle) {\n        return (\n            <div className='text-center text-gray-600 dark:text-gray-400 px-4'>\n                <p className='text-lg font-medium'>\n                    {title}\n                </p>\n                <p className='text-sm font-light'>\n                    {subtitle}\n                </p>\n            </div>\n        )\n    }\n\n    getResults() {\n\n        let search = this.state.search.toLowerCase();\n        shortcut = null;\n\n        if (search.length === 0) {\n            return (\n                <div>\n                    <MiniContentBlock\n                        icon={<SearchIcon className='w-6 h-6'/>}\n                        title='Search'\n                        text=\"Use the search bar to search across every course at Northwestern.\"\n                    />\n                    <MiniContentBlock\n                        icon={<BookOpenIcon className='w-6 h-6'/>}\n                        title='Learn'\n                        text=\"Get information like the course description, prerequisites, and more, all from right here.\"\n                    />\n                    <MiniContentBlock\n                        icon={<ArrowRightIcon className='w-6 h-6'/>}\n                        title='Drag'\n                        text=\"Drag courses from this search area into the quarter you want. Alternatively, you can click on the course and select the quarter you want to add it to.\"\n                    />\n                    <MiniContentBlock\n                        icon={<SaveIcon className='w-6 h-6'/>}\n                        title='Save and share'\n                        text=\"The URL updates as you modify your plan. Save it somewhere or share it with others.\"\n                    />\n                </div>\n            )\n        }\n\n        search = search.replace(/-|_/g, ' ');\n\n        let terms = [search];\n\n        let firstWord = search.split(' ')[0];\n        if (CourseManager.data.shortcuts[firstWord]) {\n            let shortcuts = CourseManager.data.shortcuts[firstWord];\n            let remainder = search.substring(firstWord.length + 1);\n            terms = shortcuts.map(shortcut => {\n                return shortcut.toLowerCase().replace(/-|_/, ' ') + ' ' + remainder;\n            });\n\n            shortcut = {\n                replacing: firstWord.toUpperCase(),\n                with: shortcuts.join(', ')\n            }\n\n        }\n\n        for (let term of terms) {\n            if (term.length < 3) {\n                return this.searchMessage('Keep typing...', `You'll need at least 3 characters.`);\n            }\n        }\n\n        let courseIdResults = [];\n        let courseNameResults = [];\n\n\n        CourseManager.data.courses.forEach(course => {\n            for (let term of terms) {\n                if (course.id.toLowerCase().replace(/-|_/g, ' ').includes(term)) {\n                    courseIdResults.push(course);\n                }\n                else if (course.name.toLowerCase().replace(/-|_/g, ' ').includes(term)) {\n                    courseNameResults.push(course);\n                }\n            }\n        })\n\n        let total = courseIdResults.length + courseNameResults.length;\n\n        if (total === 0) {\n            return this.searchMessage('Aw, no results.', `Try refining your search.`);\n        }\n\n        let limitExceeded = false;\n\n        if (total > SEARCH_RESULT_LIMIT) {\n            limitExceeded = true;\n            if (courseIdResults.length > SEARCH_RESULT_LIMIT) {\n                courseIdResults = courseIdResults.slice(0, SEARCH_RESULT_LIMIT);\n                courseNameResults = [];\n            }\n            else {\n                courseNameResults = courseNameResults.slice(0, SEARCH_RESULT_LIMIT - courseIdResults.length);\n            }\n        }\n\n        courseIdResults.sort((a, b) => a.id.localeCompare(b.id));\n        courseNameResults.sort((a, b) => a.name.localeCompare(b.name));\n\n        let filtered = courseIdResults.concat(courseNameResults);\n\n        let courseList = [];\n        for (let course of filtered) {\n            courseList.push(\n                <SearchClass color={CourseManager.getCourseColor(course.id)} course={course} key={course.id} select={classData => {\n                    this.setState({current: classData});\n                }}/>\n            )\n        }\n\n        if (limitExceeded) {\n            courseList.push(\n                <MiniContentBlock\n                    icon={<DotsHorizontalIcon className='w-6 h-6'/>}\n                    title={`and ${total - SEARCH_RESULT_LIMIT} more.`}\n                    text=\"There are too many results to display. You'll need to narrow your search to get more.\"\n                    key='too-many'/>\n            )\n        }\n\n        return courseList;\n\n    }\n\n    render() {\n\n        let singleClassView = false;\n\n        let results = this.getResults();\n\n        let searchField = (\n            <div className='sticky top-0 p-2 mb-2 bg-white dark:bg-gray-800 z-10 rounded-lg'>\n                <input className='block mt-4 mb-2 mx-auto w-11/12 bg-white dark:bg-gray-800 border-2 border-gray-300 dark:border-gray-700 shadow-md\n                rounded-lg outline-none hover:border-gray-500 focus:border-black dark:hover:border-gray-400 dark:focus:border-white text-lg p-2 px-4\n                transition-all duration-150 text-black dark:text-white' value={this.state.search} placeholder='Search for classes...' onChange={event => {\n                    this.setState({search: event.target.value})\n                }}/>\n                {shortcut &&\n                    <p className='text-center text-sm m-0 p-0 text-gray-500 dark:text-gray-400'>\n                        replacing <span className='text-black dark:text-white font-medium'>{shortcut.replacing}</span> with <span className='text-black dark:text-white font-medium'>{shortcut.with}</span>\n                    </p>\n                }\n            </div>\n        )\n        \n        let selectedClass = null;\n        let addButtons = null;\n        let favoritesButtons = null;\n        let exitButton = null;\n\n        if (this.state.current) {\n            singleClassView = true;\n\n            selectedClass = (\n                <SearchClass color={CourseManager.getCourseColor(this.state.current.id)} course={this.state.current}/>\n            )\n\n            addButtons = (\n                    <AddButtons action={(year, quarter) => {\n                        this.props.addCourse(this.state.current, year, quarter);\n                        this.setState({current: null});\n                    }} data={this.props.data}/>\n            )\n\n            let favorites = this.props.favorites;\n\n            favoritesButtons = (\n\n                <div className='py-2'>\n                    <p className='text-center text-gray-500 font-bold p-2 text-sm'>\n                        MY LIST\n                    </p>\n                    <button className='block mx-auto bg-indigo-500 text-white font-medium w-4/5 p-0.5 my-2 opacity-100 hover:opacity-60\n                            transition-all duration-150 rounded-md shadow-lg' onClick={() => {\n                                if (favorites.noCredit.has(this.state.current)) {\n                                    this.props.delFavorite(this.state.current, false);\n                                } else {\n                                    this.props.addFavorite(this.state.current, false);\n                                }\n                            }}>\n                        {favorites.noCredit.has(this.state.current) ? 'Remove from bookmarks' : 'Add to bookmarks'}\n                    </button>\n                    <button className='block mx-auto bg-indigo-800 dark:bg-indigo-400 text-white font-medium w-4/5 p-0.5 my-2 opacity-100 hover:opacity-60\n                            transition-all duration-150 rounded-md shadow-lg' onClick={() => {\n                                if (favorites.forCredit.has(this.state.current)) {\n                                    this.props.delFavorite(this.state.current, true);\n                                } else {\n                                    this.props.addFavorite(this.state.current, true);\n                                }\n                            }}>\n                        {favorites.forCredit.has(this.state.current) ? 'Remove for credit' : 'Add for credit'}\n                    </button>\n                </div>\n\n            )\n\n            exitButton = (\n                    <button className='block mx-auto my-8 bg-gray-500 text-white font-medium\n                        w-4/5 p-2 opacity-100 hover:opacity-60 transition-all duration-150 rounded-md shadow-lg' onClick={() => {\n                            this.setState({current: null});\n                    }}>\n                        Back\n                    </button>\n            )\n        }\n\n\n        return (\n            <div className='border-4 border-gray-400 dark:border-gray-500 mt-4 mb-2 rounded-lg shadow-lg h-full\n            overflow-y-scroll no-scrollbar'>\n                {!singleClassView && searchField}\n                {!singleClassView && results}\n\n                {singleClassView && selectedClass}\n                {singleClassView && addButtons}\n                {singleClassView && favoritesButtons}\n                {singleClassView && exitButton}\n            </div>\n        )\n    }\n\n}\n\nexport default Search;","import React from 'react';\nimport CourseManager from '../../CourseManager.js';\n\nclass StatsBar extends React.Component {\n\n    render() {\n\n        let units = CourseManager.getTotalCredits(this.props.data, this.props.favorites.forCredit);\n\n        let unitString = 'units';\n        if (units === 1) {\n            unitString = 'unit';\n        }\n\n        return (\n            <div className='border-2 border-gray-300 rounded-lg mt-2 mb-4 p-1 dark:border-gray-600'>\n                <p className='text-center text-sm font-light text-gray-800 dark:text-gray-100'>\n                    <span className='font-medium'>{units}</span> total {unitString}\n                </p>\n            </div>\n        )\n\n    }\n\n\n}\n\nexport default StatsBar;","import { useState, useRef } from 'react';\nimport { Dialog } from '@headlessui/react';\n\nexport default function Alert(props) {\n\n    let [isOpen, setIsOpen] = useState(true);\n    let [confirmation, setConfirmation] = useState({});\n\n    let cancelButtonRef = useRef(null);\n\n    function close() {\n        setIsOpen(false);\n        props.onClose();\n    }\n\n    function confirm() {\n        setIsOpen(false);\n        props.onConfirm();\n    }\n\n    let data = props.data;\n\n    let extraList = [];\n    if (data.extras) {\n        let i = 0;\n        data.extras.forEach(extra => {\n            extraList.push(\n                <div className='mt-4' key={`alert-extra-${i}`}>\n                    <p className='text-xs text-gray-500 font-bold dark:text-gray-400'>\n                        {extra.title}\n                    </p>\n                    <p className='m-0 p-0 text-sm text-gray-500 font-light dark:text-gray-400'>\n                        {extra.content}\n                    </p>\n                </div>\n            )\n        })\n    }\n\n    let optionList = [];\n\n    if (data.options) {\n        let i = 0;\n        data.options.forEach(option => {\n            let enabled = false;\n            if (!option.singleAction) enabled = props.switches[option.name];\n            optionList.push(\n                <div className='grid grid-cols-1 sm:grid-cols-5 p-2 m-2' key={`alert-option-${i}`}>\n                    <div className='col-span-1 sm:col-span-3'>\n                        <p className='text-sm font-bold text-black dark:text-white'>\n                            {option.title}\n                        </p>\n                        <p className='text-xs text-gray-600 mr-2 dark:text-gray-300'>\n                            {option.description}\n                        </p>\n                    </div>\n                    <div className='col-span-1 sm:col-span-2'>\n                        {!option.singleAction && (enabled ? \n                            <button className='block mx-auto bg-emerald-400 text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                            m-1 p-2 w-full rounded-md shadow-md'\n                                    onClick={() => {\n                                        props.setSwitch(option.name, false, option.saveToStorage);\n                                        if (option.bonusAction) {\n                                            option.bonusAction(false);\n                                        }\n                                    }}>\n                                {option.buttonTextOn}\n                            </button>\n                            :\n                            <button className='block mx-auto bg-red-400 text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                                    m-1 p-2 w-full rounded-md shadow-md'\n                                    onClick={() => {\n                                        props.setSwitch(option.name, true, option.saveToStorage);\n                                        if (option.bonusAction) {\n                                            option.bonusAction(true);\n                                        }\n                                    }}>\n                                {option.buttonTextOff}\n                            </button>\n                        )}\n                        {option.singleAction &&\n                            <button className={`block mx-auto ${confirmation[option.name] ? 'bg-red-500 dark:bg-red-500' : 'bg-gray-600 dark:bg-gray-500'} text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                                    m-1 p-2 w-full rounded-md shadow-md'`}\n                                    onClick={() => {\n                                        if (option.requireConfirmation) {\n                                            if (!confirmation[option.name]) {\n                                                setConfirmation({...confirmation, [option.name]: true});\n                                                return;\n                                            }\n                                        }\n                                        option.singleAction();\n                                        setConfirmation({...confirmation, [option.name]: false});\n                                    }}>\n                                {confirmation[option.name] ? 'Confirm' : option.buttonTextOn}\n                            </button>\n                        }\n                    </div>\n                </div>\n            )\n            i++;\n        })\n        \n    }\n\n    let editButtonList = [];\n\n    if (data.editButtons) {\n\n        let i = 0;\n        data.editButtons.forEach(editButton => {\n            let dataSet = editButton;\n            if (editButton.toggle) {\n                let t = editButton.toggle;\n                dataSet = t.data.has(t.key) ? t.enabled : t.disabled;\n            }\n            editButtonList.push(\n                <button className={`text-gray-500 hover:text-${editButton.color}-400 transition-all duration-150`} key={`edit-button-${i}`}\n                        title={dataSet.title}\n                        onClick={() => {\n                            dataSet.action();\n                            if (editButton.close) close();\n                        }}\n                >\n                    {dataSet.icon}\n                </button>\n            )\n            i++;\n        })\n\n    }\n\n\n    return (\n        <Dialog open={isOpen} onClose={() => {close()}} initialFocus={cancelButtonRef} className={`${props.switches.dark ? 'dark' : ''} fixed z-10 inset-0 overflow-y-auto`}>\n            <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n                <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n                    &#8203;\n                </span>\n                <Dialog.Overlay className='fixed inset-0 bg-black opacity-30'/>\n                <div className='inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full dark:bg-gray-700'>\n                    <div className='bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 dark:bg-gray-700'>\n                        <div className='sm:flex sm:items-start'>\n                            <div className={`mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-${data.iconBackgroundColor}-100 sm:mx-0 sm:h-10 sm:w-10`}>\n                                {data.icon}\n                            </div>\n                            <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                                <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900 dark:text-gray-100'>\n                                    {data.title}\n                                </Dialog.Title>\n\n                                {data.subtitle &&\n                                    <div>\n                                        <p className='text-md font-light text-gray-900 dark:text-gray-100'>\n                                            {data.subtitle}\n                                        </p>\n                                    </div>\n                                }\n                                {data.customSubtitle &&\n                                    <div>\n                                        {data.customSubtitle}\n                                    </div>\n                                }\n                                <div className='mt-2'>\n                                    <p className='text-sm text-gray-500 dark:text-gray-200'>\n                                    {data.message}\n                                    </p>\n                                </div>\n                                {extraList.length > 0 &&\n                                    extraList\n                                }\n                                {data.textView &&\n                                    <div>\n                                        <p className='bg-gray-200 dark:bg-gray-800 text-black dark:text-white mt-4 p-1 px-4 font-mono text-sm rounded-md md:w-96 overflow-scroll whitespace-nowrap overscroll-contain no-scrollbar'>\n                                            {data.textView}\n                                        </p>\n                                    </div>\n                                }\n                            </div>\n                                \n                        </div>\n                    </div>\n\n                    {optionList.length > 0 &&\n                        optionList\n                    }\n\n                    {editButtonList.length > 0 &&\n                        <div className='absolute top-3 right-3 flex flex-row gap-1'>\n                            {editButtonList}\n                        </div>\n                    }\n\n                    {/* {data.topRightButton &&\n                        <button className='absolute top-3 right-3 text-xs font-bold px-2 py-0.5 rounded-lg\n                                bg-gray-300 dark:bg-gray-800 hover:bg-red-200 dark:hover:bg-red-700 text-gray-500 dark:text-gray-400 hover:text-red-500 dark:hover:text-red-300\n                                transition-all duration-150' onClick={() => {data.topRightButton.action(); close();}}>\n                            {data.topRightButton.text}\n                        </button>\n                    } */}\n\n                    <div className='bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse dark:bg-gray-800'>\n                        <button\n                            type='button'\n                            className={`w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-${data.confirmButtonColor}-500 text-base font-medium text-white\n                            hover:bg-${data.confirmButtonColor}-600 focus:bg-${data.confirmButtonColor}-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm`}\n                            onClick={() => {confirm();}}>\n                            {data.confirmButton}\n                        </button>\n                        {data.cancelButton &&\n                            <button\n                                ref={cancelButtonRef}\n                                type='button'\n                                className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2\n                                bg-white text-base font-medium text-gray-700 hover:bg-gray-100 focus:bg-gray-200 focus:outline-none sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\n                                dark:bg-gray-500 dark:border-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 dark:focus:bg-gray-700'\n                                onClick={() => {close();}}>\n                                {data.cancelButton}\n                            </button>}\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n\n}","import React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport Class from '../Class.js';\nimport CourseManager from '../../CourseManager.js';\n\nconst listTarget = {\n\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        props.addFavorite(item.course, props.credit);\n    }\n\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nclass FavoritesList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false\n        }\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        let content = this.props.credit ? Array.from(this.props.favorites.forCredit) : Array.from(this.props.favorites.noCredit);\n        let classes = [];\n        if (content.length > 0) {\n            classes = content.map((classData, index) => {\n                return <Class course={classData} key={index} yi={-1} qi={-1}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    favorites={this.props.favorites}\n                    delCourse={() => {\n                        this.props.delFavorite(classData, this.props.credit);\n                    }}\n                    addFavorite={() => {\n                        this.props.addFavorite(classData, false);  \n                    }}\n                    delFavorite={() => {\n                        this.props.delFavorite(classData, false);\n                    }}\n                    \n                    />\n                    \n            })\n        } else {\n            classes = (\n                <div className={`text-center col-span-1 ${this.props.credit ? '' : 'lg:col-span-2'} overflow-hidden whitespace-normal`}>\n                    <p className='text-sm font-light text-gray-500 dark:text-gray-400'>\n                        {this.props.credit ?\n                            `Classes here are counted towards total credit (like classes you've received AP/IB credit for).`\n                            :\n                            `Find a class you're interested in but don't have a spot for it on your schedule yet? Bookmark it for later by dragging it here.`\n                        }\n                    </p>\n                </div>\n            )\n        }\n\n        let units = CourseManager.getExtraCredits(content);\n\n        let unitString = 'units';\n        if (units === 1) {\n            unitString = 'unit';\n        }\n\n        const { connectDropTarget } = this.props;\n        return connectDropTarget(\n            <div className={`relative rounded-lg col-span-1 ${this.props.credit ? '' : 'lg:col-span-2'} px-8 pt-4 pb-8 border-2\n                    ${this.state.hovered ? 'border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50' : `border-solid bg-gray-50 dark:bg-gray-800\n                        ${this.props.credit ? 'border-indigo-800 dark:border-indigo-400' : 'border-indigo-500'}`}\n                    space-y-3 h-full shadow-lg`}>\n                <p className='text-center font-bold text-md m-0 p-0 text-gray-600 dark:text-gray-400'>\n                    {this.props.credit ? 'FOR CREDIT' : 'BOOKMARKED COURSES'}\n                </p>\n                <div className={`grid grid-cols-1 gap-3 ${this.props.credit ? '' : 'lg:grid-cols-2'}`}>\n                    {classes}\n                </div>\n                {this.props.credit && this.props.switches.quarter_units &&\n                    <p className='absolute right-2 top-0 text-right text-xs p-0 m-0 text-gray-400 font-normal'>\n                        <span className='font-medium'>{units}</span> {unitString}\n                    </p>\n                }\n                \n            </div>\n        )\n    }\n\n}\n\nexport default DropTarget('Class', listTarget, collect)(FavoritesList);","import React from 'react';\nimport FavoritesList from './FavoritesList.js';\n\nclass Favorites extends React.Component {\n\n    render() {\n\n        return (\n            <div className='relative block p-4 border-4 border-indigo-200 rounded-lg m-5 shadow-sm bg-white dark:bg-gray-800'>\n                <p className='text-center text-2xl text-indigo-300 font-bold pb-2'>\n                    MY LIST\n                </p>\n                <div className='grid grid-cols-1 lg:grid-cols-3 gap-12'>\n                    <FavoritesList\n                        credit={false}\n                        alert={this.props.alert}\n                        switches={this.props.switches}\n                        favorites={this.props.favorites}\n                        addFavorite={this.props.addFavorite}\n                        delFavorite={this.props.delFavorite}\n                    />\n                    <FavoritesList\n                        credit={true}\n                        alert={this.props.alert}\n                        switches={this.props.switches}\n                        favorites={this.props.favorites}\n                        addFavorite={this.props.addFavorite}\n                        delFavorite={this.props.delFavorite}\n                    />\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Favorites;","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Content from './components/Content.js';\nimport CourseManager from './CourseManager.js';\nimport Utility from './Utility.js';\nimport Info from './components/menu/Info.js';\nimport TaskBar from './components/menu/TaskBar.js';\nimport Search from './components/search/Search.js';\nimport StatsBar from './components/menu/StatsBar.js';\nimport Alert from './components/menu/Alert.js';\nimport Favorites from './components/favorites/Favorites.js';\nimport { ExclamationIcon, PlusIcon } from '@heroicons/react/outline';\n\nconst VERSION = '1.1.3';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let defaultSwitches = Utility.loadSwitchesFromStorage();\n        let defaultAlert = null;\n\n        let data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n        let favorites = {\n            noCredit: new Set(),\n            forCredit: new Set()\n        }\n\n        let res = CourseManager.load(defaultSwitches.save_to_storage);\n\n        if (!res.malformed) {\n            \n            if (!res.empty) {\n                data = res.data;\n                favorites = res.favorites;\n            }\n            \n        } else {\n            defaultAlert = {\n                title: 'Unable to load plan.',\n                message: `The plan URL you entered is not valid. Ensure that it hasn't been manually modified.`,\n                confirmButton: 'What a shame.',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className='h-6 w-6 text-red-600' aria-hidden='true' />)\n            }\n        }\n\n        if (defaultSwitches.dark) {\n            document.body.style.backgroundColor = Utility.BACKGROUND_DARK;\n            document.querySelector('meta[name=\"theme-color\"]').setAttribute('content', Utility.BACKGROUND_DARK);\n        } else {\n            document.body.style.backgroundColor = Utility.BACKGROUND_LIGHT;\n            document.querySelector('meta[name=\"theme-color\"]').setAttribute('content', Utility.BACKGROUND_LIGHT);\n        }\n\n        this.state = {\n            data: data,\n            favorites: favorites,\n            alert: defaultAlert,\n            switches: defaultSwitches\n        }\n\n    }\n\n    setSwitch(key, val, save=false) {\n        let switches = this.state.switches;\n        switches[key] = val;\n        this.setState({switches: switches});\n        if (save) {\n            Utility.saveSwitchToStorage(key, val);\n        }\n    }\n\n    showAlert(alertData) {\n        this.setState({\n            alert: alertData\n        })\n    }\n\n    postShowAlert() {\n        this.setState({\n            alert: null\n        })\n    }\n\n    actuallyAddCourse(course, year, quarter) {\n        let data = this.state.data;\n        data[year][quarter].push(course);\n        data[year][quarter].sort((a, b) => {\n            if (a.placeholder) return 1;\n            if (b.placeholder) return -1;\n            return a.id.localeCompare(b.id);\n        });\n        this.setState({data: data});\n        CourseManager.save(data, this.state.favorites, this.state.switches.save_to_storage);\n    }\n\n    addCourse(course, year, quarter) {\n\n        let data = this.state.data;\n        let isPlaceholder = course.placeholder;\n        let repeatable = course.repeatable;\n\n        let exists = CourseManager.duplicateCourse(course, data);\n\n        if (!repeatable && exists && !isPlaceholder) {\n            this.showAlert({\n                title: 'Course already planned.',\n                message: `You already have ${course.id} on your plan during the ${Utility.convertQuarter(exists.quarter).title.toLowerCase()} quarter of your ${Utility.convertYear(exists.year).toLowerCase()} year.`,\n                cancelButton: 'Go back',\n                confirmButton: 'Add anyway',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className='h-6 w-6 text-red-600' aria-hidden='true' />),\n                action: () => {\n                    this.actuallyAddCourse(course, year, quarter);\n                }\n            })\n            return;\n        }\n\n        let unitCount = CourseManager.getQuarterCredits(data[year][quarter]) + parseFloat(course.units);\n\n        if (unitCount > 5.5) {\n            this.showAlert({\n                title: 'Too many classes.',\n                message: `With this course, you'll have ${unitCount} units worth of classes this quarter, which is over Northwestern's maximum of 5.5 units.`,\n                cancelButton: 'Go back',\n                confirmButton: 'Add anyway',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className='h-6 w-6 text-red-600' aria-hidden='true' />),\n                action: () => {\n                    this.actuallyAddCourse(course, year, quarter);\n                }\n            })\n            return;\n        }\n\n        this.actuallyAddCourse(course, year, quarter);\n\n    }\n\n    delCourse(courseIndex, year, quarter) {\n        let data = this.state.data;\n        data[year][quarter].splice(courseIndex, 1);\n        this.setState({data: data});\n        CourseManager.save(data, this.state.favorites, this.state.switches.save_to_storage);\n    }\n\n    moveCourse(course, oldYear, oldQuarter, newYear, newQuarter) {\n        let data = this.state.data;\n        if (oldYear !== -1) {\n            for (let c = 0; c < data[oldYear][oldQuarter].length; c++) {\n                if (data[oldYear][oldQuarter][c].id === course.id) {\n                    this.delCourse(c, oldYear, oldQuarter);\n                    break;\n                }\n            }\n        }\n        this.addCourse(course, newYear, newQuarter);\n    }\n\n    addFavorite(course, forCredit) {\n        let favorites = this.state.favorites;\n        if (forCredit) {\n            favorites.forCredit.add(course);\n        } else {\n            favorites.noCredit.add(course);\n        }\n        this.setState({favorites: favorites});\n        CourseManager.save(this.state.data, favorites, this.state.switches.save_to_storage);\n    }\n\n    delFavorite(course, forCredit) {\n        let favorites = this.state.favorites;\n        if (forCredit) {\n            favorites.forCredit.delete(course);\n        } else {\n            favorites.noCredit.delete(course);\n        }\n        this.setState({favorites: favorites});\n        CourseManager.save(this.state.data, favorites, this.state.switches.save_to_storage);\n    }\n\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <div className={`${this.state.switches.dark ? 'dark' : ''}`}>\n\n                    {this.state.alert &&\n                        <Alert data={this.state.alert}\n                            switches={this.state.switches}\n                            setSwitch={(key, val, save=false) => {this.setSwitch(key, val, save)}}\n                            onClose={() => {\n                                this.postShowAlert();\n                            }}\n                            onConfirm={() => {\n                                if (this.state.alert.action) {\n                                    this.state.alert.action();\n                                }\n                                this.postShowAlert();\n                            }\n                    }/>}\n\n                    <div className='bg-white dark:bg-gray-800 grid grid-cols-1 lg:grid-cols-8'>\n                        <div className='col-span-2 px-4 h-192 md:h-screen flex flex-col'>\n                            <Info version={VERSION}/>\n                            <TaskBar\n                                alert={alertData => {\n                                    this.showAlert(alertData);\n                                }}\n                                allowAddYear={this.state.data.length < 10}\n                                addYear={() => {\n                                    let data = this.state.data;\n                                    data.push([[], [], []]);\n                                    this.setState({data: data})\n                                }}\n                                version={VERSION}\n                                switches={this.state.switches}\n                                setSwitch={(key, val, save=false) => {this.setSwitch(key, val, save)}}\n                                clearData={() => {\n                                    this.setState({\n                                            data: [[[], [], []], [[], [], []], [[], [], []], [[], [], []]],\n                                            favorites: {\n                                                forCredit: new Set(),\n                                                noCredit: new Set()\n                                            }\n                                        });\n                                    CourseManager.save(this.state.data, this.state.favorites, this.state.switches.save_to_storage);\n                                }}\n                            />\n                            <Search\n                                data={this.state.data}\n                                favorites={this.state.favorites}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                                addFavorite={(course, forCredit) => {\n                                    this.addFavorite(course, forCredit);\n                                }}\n                                delFavorite={(course, forCredit) => {\n                                    this.delFavorite(course, forCredit);\n                                }}\n                            />\n                            <StatsBar\n                                data={this.state.data}\n                                favorites={this.state.favorites}\n                            />\n                        </div>\n                        \n                        <div className={`${this.state.switches.compact ? 'compact-mode ' : ''} col-span-6 block pt-0 lg:h-screen lg:overflow-y-scroll no-scrollbar`}>\n                            {this.state.switches.favorites &&\n                                <Favorites\n                                    favorites={this.state.favorites}\n                                    switches={this.state.switches}\n                                    alert={alertData => {\n                                        this.showAlert(alertData);\n                                    }}\n                                    addFavorite={(course, forCredit) => {\n                                        this.addFavorite(course, forCredit);\n                                    }}\n                                    delFavorite={(course, forCredit) => {\n                                        this.delFavorite(course, forCredit);\n                                    }}\n                                />\n                            }\n                            <Content\n                                content={this.state.data}\n                                favorites={this.state.favorites}\n                                switches={this.state.switches}\n                                setSwitch={(key, val) => {this.setSwitch(key, val)}}\n                                alert={alertData => {\n                                    this.showAlert(alertData);\n                                }}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                                delCourse={(courseIndex, year, quarter) => {\n                                    this.delCourse(courseIndex, year, quarter);\n                                }}\n                                moveCourse={(course, oldYear, oldQuarter, newYear, newQuarter) => {\n                                    this.moveCourse(course, oldYear, oldQuarter, newYear, newQuarter);\n                                }}\n                                addFavorite={(course, forCredit) => {\n                                    this.addFavorite(course, forCredit);\n                                }}\n                                delFavorite={(course, forCredit) => {\n                                    this.delFavorite(course, forCredit);\n                                }}\n                                \n                                addSummerQuarter={year => {\n\n                                    this.showAlert({\n                                        title: 'Add summer quarter to this year?',\n                                        message: `This will add a summer quarter to your ${Utility.convertYear(year).toLowerCase()} year. You can remove it by removing all classes from that quarter and refreshing the page.`,\n                                        confirmButton: 'Add quarter',\n                                        confirmButtonColor: 'yellow',\n                                        cancelButton: 'Close',\n                                        iconBackgroundColor: 'yellow',\n                                        icon: (<PlusIcon className='h-6 w-6 text-yellow-600' aria-hidden='true' />),\n                                        action: () => {\n                                            let data = this.state.data;\n                                            data[year].push([]);\n                                            this.setState({data: data});\n                                        }\n                                    });\n                                    \n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </DndProvider>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}